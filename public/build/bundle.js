
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
var app = (function () {
    'use strict';

    function noop() { }
    function assign(tar, src) {
        // @ts-ignore
        for (const k in src)
            tar[k] = src[k];
        return tar;
    }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function create_slot(definition, ctx, $$scope, fn) {
        if (definition) {
            const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
            return definition[0](slot_ctx);
        }
    }
    function get_slot_context(definition, ctx, $$scope, fn) {
        return definition[1] && fn
            ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))
            : $$scope.ctx;
    }
    function get_slot_changes(definition, $$scope, dirty, fn) {
        if (definition[2] && fn) {
            const lets = definition[2](fn(dirty));
            if ($$scope.dirty === undefined) {
                return lets;
            }
            if (typeof lets === 'object') {
                const merged = [];
                const len = Math.max($$scope.dirty.length, lets.length);
                for (let i = 0; i < len; i += 1) {
                    merged[i] = $$scope.dirty[i] | lets[i];
                }
                return merged;
            }
            return $$scope.dirty | lets;
        }
        return $$scope.dirty;
    }
    function update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {
        const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);
        if (slot_changes) {
            const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
            slot.p(slot_context, slot_changes);
        }
    }
    function null_to_empty(value) {
        return value == null ? '' : value;
    }
    function action_destroyer(action_result) {
        return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;
    }

    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_style(node, key, value, important) {
        node.style.setProperty(key, value, important ? 'important' : '');
    }
    function toggle_class(element, name, toggle) {
        element.classList[toggle ? 'add' : 'remove'](name);
    }
    function custom_event(type, detail) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, false, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error('Function called outside component initialization');
        return current_component;
    }
    function onDestroy(fn) {
        get_current_component().$$.on_destroy.push(fn);
    }
    function createEventDispatcher() {
        const component = get_current_component();
        return (type, detail) => {
            const callbacks = component.$$.callbacks[type];
            if (callbacks) {
                // TODO are there situations where events could be dispatched
                // in a server (non-DOM) environment?
                const event = custom_event(type, detail);
                callbacks.slice().forEach(fn => {
                    fn.call(component, event);
                });
            }
        };
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    let flushing = false;
    const seen_callbacks = new Set();
    function flush() {
        if (flushing)
            return;
        flushing = true;
        do {
            // first, call beforeUpdate functions
            // and update components
            for (let i = 0; i < dirty_components.length; i += 1) {
                const component = dirty_components[i];
                set_current_component(component);
                update(component.$$);
            }
            set_current_component(null);
            dirty_components.length = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        flushing = false;
        seen_callbacks.clear();
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    let outros;
    function group_outros() {
        outros = {
            r: 0,
            c: [],
            p: outros // parent group
        };
    }
    function check_outros() {
        if (!outros.r) {
            run_all(outros.c);
        }
        outros = outros.p;
    }
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor) {
        const { fragment, on_mount, on_destroy, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        // onMount happens before the initial afterUpdate
        add_render_callback(() => {
            const new_on_destroy = on_mount.map(run).filter(is_function);
            if (on_destroy) {
                on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const prop_values = options.props || {};
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            before_update: [],
            after_update: [],
            context: new Map(parent_component ? parent_component.$$.context : []),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false
        };
        let ready = false;
        $$.ctx = instance
            ? instance(component, prop_values, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor);
            flush();
        }
        set_current_component(parent_component);
    }
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.7' }, detail)));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.wholeText === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    var title="Норильск";var epigraphes=[{paragraphes:["«Норильск? Говорят, там не очень…»"],annotation:"Частное мнение"},{paragraphes:["Позади уже пол-Сибири,","Впереди еще пол-Сибири,","Помолись богам,","Сколько есть их там,","Впереди еще пол-Сибири. "],annotation:"Перепевка из Великого"}];var articles=[{day:0,date:"04.07.2020",parts:[{time:"",paragraphes:["Полная жёлтая луна ловкой монеткой карабкается по небосклону. Жарко. На моем диване и столе почти не осталось вещей. А днём их было много. У меня взвинченное настроение, я пытаюсь до последнего все предусмотреть. Хотя, положа руку на сердце, мне нужны только паспорт и деньги. Ну и может быть флиска. И железные яйца, куда без них.","Пора уже перестать метаться и поиграть в Factorio под ворчащего фоном Школьникова."]}]},{day:1,date:"05.07.2020",parts:[{time:"",paragraphes:["Таксисты — это всегда лотерея. Наш оказался человеком, любящим поговорить. Мы ехали по пустому ночному городу, асфальт блестел от недавней грозы. Новый мост блестящим ожерельем поднимался на высоту правого берега, гаишники отдыхали после профессионального праздника. У аэропорта Баратаевка пели птицы. Выгрузив наши сумки водитель попрощался, и тут же подхватил новых пассажиров. Бедняги долго ждали, видимо из-за грозы.","Миловидная девушка в брюках по последней моде с высокой талией, проверила нас измерителем температуры и пропустила в зал ожидания отремонтированного аэропорта.","Сейчас мы сидим в стерильной зоне, за окном, на фоне проясняющегося неба зеленеет борт S7. Не знаю, наш ли. Большеват."]},{time:"7:00 MSK",paragraphes:["Борт вздрогнул и ожил. Что-то в его недрах зашумело, завибрировало. Стюардесы пристегнулись к своим местам. Малыш в хвосте в обход общего сосредоточения продолжал веселиться. Борт выехал с паркинга, потрескавшиеся плиты заменились гладким матовым покрытием взлетной полосы. С успокаивающей периодичностью мимо проходили сигнальные огоньки.","Неожиданно борт резко втопил, я в деталях представила себе руку пилота, опускающего вниз рычаг силовых установок, и, с легкостью сильного животного, долго ждавшего в засаде, самолет рванул вперед и вверх.","Вопреки обыкновению мы сидели не за, а перед крылом и в этот раз я смогла освидетельствовать предкрылки. Пока я восхищалась набираемой высотой и многослойными облаками, предкрылки успели задвинуться на место.","Было шумно, воздух очищался каждые три минуты, и в этой идиллии я начала дремать.","Когда очнулась под нежное увещевание пилота и стюардесс, за окном было белое марево.","В аэропорту по-утреннему светло и по карантинному камерно. Ворвавшись в Домодедова, мы вначале ринулись на приступ, а потом смешались и растерялись. Большой, многолюдный, хорошо организованный, но непонятный.","Сейчас едим орешки."]},{time:"19:58 MSK",paragraphes:["Благодаря Тане сделали вылазку на Поклонную гору. Давно не была в Москве. В аэропортах – да, но не в этом сложном потоке людей, транспорта, стекла. Мерно покачивался вагон аэроэкспресса, метро всё также пахло машинным маслом и глубиной, высотки Москва-Сити стильно отражали небо.","На Поклонной горе было просторно, по-советски монументально. И мой любимый прием в монументах войны: контраст между застывшими на пределе движения солдатами, знаменами городов-героев и мирно гуляющими людьми, катающимися детьми и, предположительно, нарядно одетыми монголами.","Самолёты залихватски опирались шасси в асфальт, мины чинно занимали своё место в парковом пруду, артиллерия игнорировала коррозию.","Мы мило посидели в компании таниной мамы в двухэтажном кафе, официантка мужественно разделила счёт.","Мы надышались воздухом, изрядно устали, подпеклись на солнце и нырнули в недра метро. Таня легко и несколько отчуждённо лавировала в потоке людей и бронзовых статуй станции Революции. А потом мы вернулись на Павелецкий вокзал и заняли места в ярко красном вагоне аэроэкспресса.","Этот день начался слишком давно, и до его завершения придется много сделать. А ночи не будет. Ночь для слабаков."]}]},{day:2,date:"06.07.2020",parts:[{time:"",paragraphes:["Ночь прошла беспокойно. Я переживала за карантин в Норильске. Импозантный сотрудник паспортного контроля озадаченно читал мои каракули на тему что я забыла в Арктике, но, услышав что это частная поездка, успокоился.","Ждём багаж.","На полосе борт остановился под голос пилота: «Добро пожаловать в Норильск».","В аэропорту Таня кивнула на большой постер с долиной Плато Путорана: «Рекламируют?»","На улице 140. После 350 дома и доброго тридцатника в Москве. Я в своих белых бриджах выгляжу экзотично."]},{time:"11:00 NSK",paragraphes:["Я помылась и перестала пахнуть Домодедово.","Мы не спали две ночи, поэтому рассказ будет путанным.","В полночь пятого наш боинг, пятясь, выехал с перрона Домодедова. В аэропорту было очень душно, огромная очередь, бестолковая посадка. Боинг рулил в темноте, радуя нас разноцветными огнями Домодедово. Перед нами взлетел RedWinds, когда его силуэт еще был различим, на взлет пошли мы.","В рейсе на меня накатила клаустрофобия. Пыталась спать, но стюардессы отвлекали то едой, то фальсификацией документов. Потом как-то задремала, скрючившись, периодически тоскливо глядя на светящийся горизонт. Спать не удавалось, двигатель мешал, сосед сзади заставлял завидовать, так как судя по его храпу бессонница его не беспокоила.","В какой-то момент пришлось выйти из анабиоза. За иллюминатором было молоко. Борт стал снижаться, пробил два слоя белой ваты, затем увяз в плотном тумане. Нечего не было видно, вестибулярный аппарат подсказывал, что мы летим вниз.","Наконец молоко стало сереть и показалась земля с пятнами озер и отдельно стоящими лиственницами. Самолет тяжело схватился шасси за взлетку и принялся неистово тормозить, из-за чего я подумала, что полоса слишком короткая. Наконец мы остановились, пассажиры тут же решили сбежать, но их остановил преисполненный нежного осуждения голос стюардессы.","Наперевес к нам мчалась машинка с конвейерной лентой для багажа, подкатила цистерна с топливом. Спустя какое-то время нам разрешили выйти. Стоящие наверху трапа стюардессы отметили маску мамы, выполненную в корпоративных цветах S7.","В аэропорту мы постояли на посту паспортного контроля, и мама решила взять огонь на себя.","На противоположной стене Урванцев, в плаще и с книгой, с сомнением следил за нашими начинаниями.","Не с первого раза, но поймали багаж. Выход из аэропорта внезапно оказался там же, где вход. Долго ехали до Кайеркана. По сторонам от дороги располагались зеленые пустоши, кое-где слой земли был снят и обнажал черный щебень.","Проехали заброшенные многоэтажки. Повсюду много озер и странной формы рек, словно потерянных в пространстве.","Ландшафт стал подниматься, верхушки холмов покрывали осыпи.","Судя по всему, местные жители больше всего любят строить опоры электропередач, причем от самых простых деревянных, до высокотехнологичны. И второе любимое занятие – трубы. Уводить их под землю нельзя, так что всюду лежат макаронины разной формы и длины. Видела лежащую опору. Видимо из нее сделают трубу.","Сижу вот, нервирую маму. Они пытается поспать, а я её бужу. Надо ехать на обзорную экскурсию.","На дороге появился советский указатель Кайеркан, который первой обнаружила Таня. Вслед за знаком пошел отчаянный в своей урбанистичности городок. Мы крепились, созерцая сильно потрепанные многоэтажки и горы черного шлака и даже как-то приуныли, когда автобус пронесся мимо, и ландшафт снова схлопнулся в тундру. Но всё-таки наше транспортное средство завернуло, и, войдя в карман на дороге, остановилось.","Какое-то время мы выясняли, является ли указанная локация автовокзалом Кайеркана, нам настойчиво предлагали поехать дальше в Норильск. В конце концов справедливость восторжествовала, точки были расставлены над i и мы остались в неприятном недоумении с чемоданами на дороге.","На противоположной стороне, чуть в отдалении, стоял несколько потёртый форд, в котором размещалась наша серьезная группа.","Отступление. В аэропорту Домодедова, в стерильной зоне, мы сидели в кафе и закусывали круасанами. Рядом, сдвинув столы, сидела компания молодых людей. Я не обратила бы на них внимание, если бы не блестящие бокалы с содержимым из скромной, но благородной бутылки на столе. Я прислушалась. Чуваки говорили о Плато Путорана. Они смеялись, что-то вспоминали, и производили впечатление хорошо знакомых друг-другу людей. Их ноги были обуты в трекинговые ботинки, а на полу под столом лежали туристические сумки. И тут я подумала – вдруг это наша группа? Мне стало как-то неуютно. Пусть кто-то другой. Без этой похвальбы и борьбы за власть. Когда мы пошли на посадку в Норильск на 42 выход, компания осталась на месте. Я выдохнула.","Наши настоящие сотоварищи оказались старше, солиднее. Больше мужчин. Интересно, что они ищут на плато?","Погрузившись и пересчитавшись, мы поехали в сторону Норильска. Из пелены проступали массивы гор, в небо упирались трубы обогатительного комбината. Всё вокруг напоминало смесь игр Factorio и Чернобыль.","Промзона Норильска оставляет сильное первое впечатление. Эдакая практичность и полное равнодушие к деталям.","Шофер включил радио Искатели, и мы, подпрыгивали на дороге под романтические песни.","Улицы Норильска встретили ярко-жёлтыми домами, арками, какой-то общей обшарпанностью, будто в реальном времени на изображение накладывался фильтр старения.","Потом опять была промка, дорога на Валёк, простор Норилки. И Талнах, где мы сейчас живем во вполне приятном номере, и столуемся в ресторане."]},{time:"21:30 NSK",paragraphes:["Не так давно вернулись с обзорной экскурсии по Норильску. Наше криминальное начало в этом городе возымело продолжение. Экскурсии запрещены по ковиду, потому мы изображаем местных. По мне так вообще не похоже.","Мы ездили по Норильску и Талнаху, я всё время теряла ориентацию в пространстве. Повсюду комбинаты, вездесущие трубы, устройства охлаждения. И как контраст – пустые дома, законсервированный завод по производству никеля. Здесь, когда видишь что-то раздолбанное, сложно понять – это нечто сломано или у его хозяина просто нет никаких эстетических ограничений и всё так, как и задумывалось?","В городе полно металлолома, его не вывозят – нерентабельно. Особенно много ржавых труб.","Мне было немного жаль, что я не понимала смысл окружающих сооружений.","Вообще, одним словом, Норильск можно охарактеризовать как бессонную фантасмагорию. Или, как хорошо сказала мама – не завод для города, а город для завода. Среда, неподходящая для жизни совсем. Дома на вечной мерзлоте. Кости заключенных и яхты олигархов. Самолеты, которые возят в Красноярск руду. Железную дорогу закрыли из-за постоянных метелей. Какая-то жизнь за гранью отчаянья. Родине требуется никель – работаем. Как, какой ценой – не важно. Здание проваливается – сносим, строим другое. Всё катится к чертям в 90-е – уезжаем или трем зубы. Знаменитый лозунг -сделай или умри – приобретает здесь другое значение. Это не про героизм или самопожертвование. Нет. Это о том, что если ты не можешь выполнить работу, будь так добр, иди замерзать в тундру, чтобы освободить место для того, кто может сделать дело. Потому что по-другому никак. Потому что под ногами платина, а на границах – враги. И тут как-то без вариантов."]}]},{day:3,date:"07.07.2020",parts:[{time:"7:25 NSK",paragraphes:["Утро. Свет солнца из окна точно такой же, как и вечером. Мама шуршит пакетами.","Сегодня мы едем на Путорана. Сложили самое необходимое в рюкзаки. Нервничаем – что там будет?","В термобелье я похожа на нидзя, а мама – на гонщика."]},{time:"13:40 NSK",paragraphes:["Шум работающего двигателя. Гремит железо. Капитан деликатно согнал нас с кормы, чтобы открыть люк и запустить дизель. Сгоняю чёрного жука с длинными усами с таниного рюкзака.","Озеро Мелкое. Каменистый пляж метра три шириной, дальше разнотравье, кустарники, нога мягко тонет, если идти.","Недалеко остров с базой МЧС-ников. Через озеро – невысокие, длинные холмы со снежниками.","Мы остановились здесь, чтобы пообедать и поменять трос у второго катера (тот стал плохо управляемым).","Отплыли, снова ветер. Отгоняю ручкой комарика с бумаги, мешает писать. Надо одеться теплее."]},{time:"15:25 NSK",paragraphes:["Внутри катера тепло. Наш капитан правит челном под музыку из оперы Кармен.","После остановки долго шил по озеру Лама. Низкие берега расступились, и мы бодро чесали по водному пространству.","Я дремала, положив голову на рюкзак. Всё боялась уснуть и выронить его за борт. Спустя какое-то время на горизонте появилась туча и под ней едва заметным контуром – первые отроги Путорана.","Капитан и наш гид спорят о маршруте. Ну очень импровизационный тур, всё меняется от минуты к минуте.","Капитан говорит, что тучу унесло. Покапает немного и перестанет. Хотелось бы верить."]},{time:"18:45 NSK",paragraphes:["- Да ладно, девчонки, нам надо только спуститься вон к тому озеру! (Диалоги туристов, потерявшихся в лесу над озером Лама).","- Вы там идете? (гид)","- Нет, блин, остаемся.","Мы шли вниз, пересекая овраги, перешагивая деревья, проваливаясь в мягкий, ворсистый мох. «Я опять промолчу. В тринадцатый раз», - говорит Таня.","Это был тот случай, когда группа ушла вперед, и мы потеряли след. В мягком мху не остается вмятин.","Спасибо не было подлеска и поваленных деревьев. Пробираясь по лесу и пытаясь не потерять спину Тани, я тоскливо думала о потраченной сумме. Когда я уже научусь планировать отпуск в безопасном и тёплом месте?","В конце мы вышли из леса, но не в лагерь, а на берег озера. Путь радовал отсутствием альтернатив. По гальке и большим камням, мы побрели к катеру.","Когда пришли, выяснилось, что несколько человек из второго катера тоже потерялись. «Какие молодцы, все пришли», - сказал нам дядечка со второго катера, опершись на леер.","Наш капитан включил протяжную сирену. Люди нашлись, и мы отчалили.","Теперь у меня мокрое термобелье и флиска. Блеск."]}]},{day:4,date:"08.07.2020",parts:[{time:"00:10 NSK",paragraphes:["База Белого шамана. Светло, как в начале вечера. Мозг от этого слегка шалеет. За окном горы. Они изъедены ветром и льдом, как и дома в Норильске.","База состоит из нескольких домов, соединенных мостками. Местные заняты своими делами. Гудит генератор. На берегу лодки. Глубже в лес – мастерская. Трекинговые палки, прислонённые к стене. Тазик для постирушек.","Говорят, местным не платили зарплату с апреля. Если, благодаря моему приезду, им заплатят, то это, пожалуй, самое благородно дело, которое я совершила в жизни.","По двору ходит собака, сильно смахивающая на волка. И вторая, постарше, у нее что-то с губой. Двое щенков, милые толстячки, играют со всем, что подвернется.","Внутри дома музей нганасан, кресло с медвежьей шкурой, много книг конца прошлого века. Мама сказала, что этот дом построил романтик.","Да, это форпост какого-то хорошего, прежнего мира, которого я уже не застала.","Забыли выпить таблетки. Долго искали воду запить. Таня потянулась за своей. В этот момент через щель в потолке появилась бутылка и голос наше соседки Ольги сказал: «Надо воды?».","Вот такой дом."]},{time:"8:30 NSK",paragraphes:["Утро на Путорана. На листьях шиповника лежит роса. На деревянных мостках – лепестки. Сегодня видно лучше, горы не сизые, детальнее прорисованы.","Сходили на берег, попить водички.","Ждём завтрака."]},{time:"15:15 NSK",paragraphes:["После завтрака собрали вещи, пошли искать палки на берег. Один экспедиционер сказал, что наш шанс выйти на прогулку – 15%. Нам не хотят давать лодки.","Гид долго ругалась. Под её горячую руку попал импозантный местный мужчина с хриплым голосом. По средствам пинков и словословия, гид загнала его в лодку и вместе они куда-то умотали.","Мы продолжали медитировать. Рыбаки обсуждали возможность лова в озерах с берега. Пришли к выводу, что никак.","Вышли на берег, спасаясь от комаров. Наконец раздался шум катера. К нам вернулся наш капитан. Но катер был только один.","Народ погрузился, гид всех гоняла, чтобы не переходили с борта на борт. Когда катер отчалил и стал набирать ход, выяснилось, что одного экспедиционера забыли. Отряд не заметил потери бойца и мы погнали дальше.","Остановились у плачущих скал, постояли, глядя на водопад. Потом прошли еще немного, и вышли на берег, заваленный белым тальником. Посередине красовалась конструкция из сложенных жердей.","Потопали вверх. Лес довольно светлый, ступаешь по мягкому настилу из мха и палых иголок лиственницы. Временами попадались камни, раскрашенные белым и черным лишайником.","Группа быстро растянулась, довольно скоро мы потеря тропу, а потом и гида. Лес стал реже, появился бурелом. Без дороги и ориентира, мы пробирались вперед. Наконец лес расступился, и мы обнаружили каменное ложе реки. Воды почти не было, только ручей на границе камней. Если посмотреть вверх, можно было увидеть каскад из нескольких водопадов. Под ногами на камнях цвели незабудки и непомерно здоровый чабрец. Прыгая по камням и форсируя ручей, добрались до водопада. Стены каньона смыкались, образуя спасительную тень.","Комары вольготно приземлялись на мое термобелье и с комфортом сосали кровь.","Долго спорили, по какой дороге подниматься дальше. Одна тропинка шла зигзагом, другое направление было по осыпи песочно-желтого цвета. В итоге решили зайти в лес и попытаться подняться выше. Одна из экспедиционерок показала фотку горы с воды и заметила, что на высоте лес кончается и можно вполне сносно идти.","Опять пошел бурелом, в какой-то момент я шла, как ледокол, ломая ветки. Мы выбрались наверх, где обнаружился гид и стал что-то говорить. После посещения водопада мы испытывали заметную долю сомнения в его компетентности, но согласились пойти по предложенной тропе. Путь шёл серией крутых и более пологих подъёмов, справа шумел ручей, обрывающийся водопадом.","На определенной части пути Ольга сказала, что пусть это будет наша высота и на этом закругляемся. Расселись по камням. Хорошо просматривалась долина озера Лама, вправо вдалеке виднелась уходящая к горизонту река Бунисяк, в честь которой была названа база. Я сухими губами и со сбитым дыханием играла на гармошке. Это был прекрасный момент.","Путь назад отметился тем, что мы очередной раз потеряли Егора. Один мужчина пошутил про его отца: «Да у них много детей, посылают их на разветку. Прорежают». Отец Егора зычно кричал вниз, чтобы тот вернулся, из каньона донеслось: «Не-е-ет».","Потом спускались, постоянно теряя трапу. Один из вариантов зашел в болото. Как мы вышли из леса и как нашли катер – невероятное везение. На берегу стояли черепа и рога оленей. Я нашла кусок челюсти с зубами. Какие-то браконьеры промышляли.","На катере добрались до базы. Молодая часть обитателей что-то жгла в старой бочке от топлива и веселилась.","В столовой наш повар Галина Андреевна разливала суп с кусками оленины и всё предлогала добавки. Так же зашёл сиг, которого было мало, так как рыба не ловилась. В столовую с жалостливыми мордами заглядывали собаки, в том числе с отвислой губой – оказывается, это ранение она получила в схватке с медведем.","Говорят, завтра будет шторм и нам нужно вовремя сбежать обратно в Норильск. Учитывая, как мы веселились в хорошую погоду, не могу представить, как будем выкручиваться.","На каменную площадку у озера сел вертолет, и из него вышел мрачный инспектор. Мы отсиживаемся (на самом деле отлеживаемся) в доме, стараясь не попадаться ему на глаза. Дожили, раньше я не могла пойти в туалет из-за медведей, теперь из-за инспектора."]},{time:"20:00 NSK",paragraphes:["После похода на водопад мы час кемарили. Потом пришла Ольга и сообщила, что прилетел вертолет, высадил инспектора, что из домика не выходим и поход переносится на 17:00.","Впечатлившись перспективой быть отправленными на карантин по средствам этапирования в Валёк, мы снова вздремнули.","В пять на улице стоял героичный, хотя и несколько помятый народ. Несколько человек благоразумно продолжали спать.","Отряд двинулся в поход, прошел мимо кухни, салютовал Галине Андреевне, и затопал сквозь мокрые густые заросли. Таким манером мы вышли на берег Ламы и обнаружили множество кипельно белого тальника, хаотично разбросанного поверх камней, и гору, которую затягивал дождь. Пока мы перелизали груду камней, раздался истошный вопль гида: «Уберите от-туда ребенка!!!» Оказалось, что наш вездесущий Егор нашёл ритуальный шаманский круг.","Мы пошли дальше, обсуждая, что по лабиринтам можно ходить, например в Аркаиме. На что мама авторитетно заявила, что там портал лет тысячу как закрыт, а здесь он действующий. Так или иначе, духи отреагировали однозначно – когда мы прошли святилище, пошёл дождь и пришлось вернуться назад.","В итоге мы завернули в кухню. Галина Андреевна готовила, мы за ней наблюдали. Говорили о Красноярском крае, рудниках, комбинатах, казаках, ручном труде, образовании, школах, а потом наступил ужин.","На улице шёл дождь, на стене висели мокрые куртки, дождевики. Мужчины принесли сухостоя, который Галина Андреевна закинула в мангал, на котором кипел чайник и кастрюля с картошкой и мясом.","В беседке наших соседей протекала крыша, по этому нам пришлось уплотниться. Впрочем, они пришли попозже.","По крыше нашей палатки ходила трясогузка. Её чёрные лапки чётко проступали на белом фоне, и была видна тень от хвоста. Одна птичка стояла на месте, вторая бегала по крыше. Видимо мама ловила комариков и кормила птенца.","Мы напились чаю, надели дождевики и пошли в дом."]}]},{day:5,date:"09.07.2020",parts:[{time:"8:25 NSK",paragraphes:["Ночью было холодно, и шёл дождь. Проснувшись, (а свет из окна был точно такой же, что и ночью), натянула на себя холодные вещи. Искусанные предплечья и спина пошли буграми, но не покраснели и не особо чешутся.","Завтракали, отбивая кашу у комаров. Повар и гид собирают кухню. Мы уезжаем."]},{time:"13:00 NSK",paragraphes:["На озере нарастал шум двигателя катера. Мы стояли на мостках с рюкзаками, нас провожали местные собаки.","Погрузились на борт вместе с облаком комаров. Отчалили. Второй катер пошёл вперед, а мы, сделав манёвр, причалили к берегу, где забрали сумки с едой. Никто с берега их не подал, так что за ними пришлось идти капитану.","Развернулись, получив прощальную панораму окрестных гор, и пошли по Ламе на запад.","Комаров сдуло ветром. Мимо прошла Шайтангора. Долины и хребты уходили в синеву, повернув голову по ходу движения катера можно было почувствовать запах тумана.","Мы прошли мимо горы, на которую вчера лезли.","Спустя какое-то время подошли к базе из новых домиков. Капитан пошёл договариваться. Местные первым делом спросили: «Что за люди?». В общем, нас тут принимают как чумной корабль.","Галина Андреевна осталась в надежде сделать мангал и нагреть чаю. А мы двинулись от берега в поисках водопада.","Лес был довольно светлый, из каменных берез, в отдалении были видны зеленые щеточки лиственниц.","Прошли старый засыпанный водопад, долго прыгали по камням. Между глыбами видны пустоты. Под камнями идет река. Прошли еще по мху и добрались до водопада. Границы каньона были очерчены заграждением из ржавых цепей. Экспедиционеры бросились фоткаться на краю, на фоне потоков воды и внушительных трещин, намекавших на общую надежность камней.","Пошли обратно. На подходе к поселку услышали звук забиваемых гвоздей, на что мама пошутила, что так тут реагируют на гостей. На самом деле это два усталых сотрудника НорНикеля что-то строили из свежеструганных досок.","На берегу выяснилось, что огонь развести нам никто не даст, и придётся обедать на корабле.","Катера отчалили. Мы сидели внизу и поглощали приготовленную Галиной Андреевной курицу. Капитан слушал переговоры по рации. Неизвестный собеседник просил кого-то невидимого забрать еду из холодильника.","Сейчас сидим на корме, греем ноги об мотор. Горы похожи на профили вождей на монетах. Всё уходит, отступает в дымку, только второй катер мужественно висит у нас на хвосте."]},{time:"19:00 NSK",paragraphes:["Вернулись в Талнах. Теперь вещи делятся на грязные, пахнущие лиственницей, и чистые. Моя спина как у больного краснухой. А ведь сильно не чесалось.","Вышли в поселок на разведку. После дикой местности архитектура Талнаха выглядит куда приятнее. Стоит теплая погода, очень много детей гуляет на площадке.","Пока шли сюда, убегали от шторма. Внизу сильно качало, я прикидывала, как можно выбраться, если катер перевернется. Но наш капитан, широко крутя штурвал, часами шёл прочь от дождевого фронта. Идущий за нами катер точно повторял манёвры.","Сейчас я сижу в номере в банном полотенце, и мне отчаянно лень разбирать вещи."]}]},{day:6,date:"10.07.2020",parts:[{time:"11:13 KJA",paragraphes:["Борт теплохода А.Матросов.","Группа людей из Норильска, в прошлом – экологов с Путорана, выбралась на причал, и, преодолев дебаркадер, направилась на посадку.","На входе транспортная безопасность, меряют температуру, проверяют на металл. Сеть не ловит, поэтому не могу узнать, в какой каюте Таня. Где-то полчаса еще партизаним.","Утром был стремительный завтрак, я мешала маме пить кофе. Запихали вещи в автобус и помчались. Проехали Талнах, рудник Маяк, мимо турбаз, мимо пристани Норилки, через мост, мимо Валька, через Норильск, через промку Норильска, мимо труб, под пологом сернистого газа, мимо Надежды, через тундру, через Дудинку и добрались до пирса.","Дудинка маленький, чистый город, с грузовым ж/д вокзалом, с длинной набережной.  На причале стоял сухогруз НорНикеля. Судов мало, хотя в отдалении стоят баржи и буксиры.","Всё также длиться бесконечный полярный день, летают огромные чайки, сильный ветер. Борт бьется о дебаркадер и протяжно скрипит.","Ну хоть что-то знакомое. Напрягает, что мы всё еще под прикрытием."]},{time:"13:20 KJA",paragraphes:["Двигатель корабля почти не слышно. Навстречу мерно катиться Енисей, шуршит гребнями волн. Противоположный берег песчаный с косами, а может островами.","Уходили из Дудинки, прощающиеся, вопреки обыкновению, улыбались. Много местных жителей, они похожи на худых якутов.","Мне как-то не хочется писать о Норильске. Там, перефразируя известную фразу, люди живут за металл. В этих смутных горах и печальной, выжидающей тундре не должно было быть города. Может быть чум или целое стойбище, но не город. Он построен на преодолении, его люди платят тяжелую цену за нарушение порядка вещей. Трубы комбинатов подобны корням, тянущим руду из окрестных гор. Всё, что добывается здесь – металл и полученные за него деньги – уходит куда-то на материк. И, видимо это ощущение – величие и тщетность собственного труда – рождает удивительную двойственность людей. Несомненное трудолюбие и какое-то обреченное разгильдяйство, уступчивость и полное безразличие к мнению оппонента, строгое отслеживание происходящего и обдуманное игнорирование законов.","Я очень надеюсь, что когда-нибудь карма вернется, и Норильск получит достойную плату за свою работу. Что на плáтину будут построены дома, школы и больницы. Что будут поставлены фильтры на трубы, опаленные лиственницы отрастут, комары станут веганами. Ладно, про комаров я загнула.","Как бы не сложилась судьба этого города, планку он уже взял просто фактом своего существования. Я уплываю, так как сделать для него ничего не могу."]},{time:"16:40 KJA",paragraphes:["Подходим к Потапово. Солнечно, даже жарко. Таня пыталась пробраться в каюту капитана. Купили в баре мороженного и капучино маме. Сейчас будет остановка на рейде."]},{time:"18:00 KJA",paragraphes:["Бот подходит к борту теплохода, с кормы. Вокруг, словно хищные птицы, кружат моторные лодки. Бросают фал и крепят нос. Двое матросов держат лодку руками за спущенную с корабля лесенку. Один принимает груз. Сумки, коробки летят на нос. Одной рукой матрос принимает мешок картошки и бросает на дно. Тот падает верхом к двигателю. «Будет сразу печеная», - шучу я. Большая плоская коробка плюхается на дно. Мама: «Это плазма». ","Набросав багажа, начинают принимать пассажиров. Спиной к ступеням спускаются напуганные люди в оранжевых спасжелетах. Их принимают, лодка качается, зрители на верхних палубах волнуются. Спускается женщина в возрасте, вслед за ней летит дамская сумочка. Как могут размещаются на корме. Передают малыша, спасжилет больше его. Малыш плохо понимает, что вообще творится.","Матрос берется за руль, забирают трос, лодка, подпрыгивая на волнах, обдаваемая брызгами, глубоко сидя в воде, устремляется к берегу.","Её место занимают частные лодки, там всё быстро и по-деловому. В одной мальчик радостно вскрикивает: «Мама!». Взрослые быстро принимают женщину, отчаливают от корабля. Мальчик за рулем, отводит лодку прочь.","При всей рискованности (а вода в Енисее ледяная) у людей будничные лица. Мы в ужасе и в восторге, у них – еще один день в этом далеком краю.","Потапово, рядом с которой, развернувшись носом к берегу, стоит наш теплоход, чистенькая довольно большая деревня. Стоит на холме. На берегу ряд цистерн для топлива. Люди живут очень автономно. Большой пляж, на нем стоят лодки, едет белый уазик. Такой вот островок жизни."]},{time:"22:00 KJA",paragraphes:["На ужин была картошка дольками, котлета из белой рыбы под соусом, а также умопомрачительно вкусная булочка с черемуховым вареньем. На кухне была какая-то заминка, образовалась пауза, в которую наш новый гид Людмила рассказывала про Енисей и местную жизнь.","Вечер мы провели на палубе, было тихо, почти без ветра. Бессонное солнце имитировало закат. По реке в отдалении шли корабли. Ночью обещают Игарку, надо посмотреть."]}]},{day:7,date:"11.07.2020",parts:[{time:"13:00 KJA",paragraphes:["Только что была пожарная тревога. Трагически горел форпик. Прибежал экипаж, вытащили пожарный шланг, поднялся столб брызг. Пассажиры сопереживали. Когда воображаемое пламя было потушено, капитан сообщил, что в 120 каюте обнаружена пробоина. Матросы не дрогнув, побежали всех спасать. Таня переживала, что вода из пожарного шланга продолжает бежать. Пока пассажиры приходили в себя, капитан сообщил, что тревога закончилась, экипаж приглашается в кают компанию.","Вчера глубокой ночью были в Игарке.","Стоял всё тотже полярный день, солнце правда скрылось за лес, но было по прежнему светло. Город расположился в изглучине, по соседству остров с аэропортом. Когда-то Игарка была процветающим морским портом, сюда заходили корабли с Северного морского пути, грузили лес с Ангары. Здесь создали музей изучения вечной мерзлоты, и придумали науку геокриологию. А сейчас это просто пристань, дебаркадер, местные с тюками, погруженные в свои заботы, садятся на пароход.","Мы совершили маршбросок по лестнице, чтобы сфоткать теплоход. Достаточно нервно сходить на берег всего на 10 минут. Перспектива остаться в Игарке на все жизнь или хотя бы до следующего рейса, заметно прибавляла скорости.","По традиции, на нас напали комары и даже сопроводили до корабля. Одного из них, сытого и умиротворенного обнаружила утром на занавеске.","В середине дня пересекали полярный круг. Вышли разногласия, где он находится. В итоге, пошли в рубку. Капитан, обоятельный мучниа, неспеша говорил о Курйке, маленьких деревеньках, реке. Впереди лежал гладкий как зеркало Енисей, рулевой меланхолично держал курс и задумчиво крутил ручки рычогов. После это в ресторане, где мы кстати тоже находимся незаконно, нам вручили сертификаты. Пришел капитан в форме, моментально оценил расклад сил, и стал всех поздравлять. Затем мы тяпнули по шампанскому и получили пакетики с подарками."],image:{src:"build/images/img_1.png",annotation:"Игарка. Полночь"}},{time:"22:00 KJA",paragraphes:["Теплоходы красят традиционными голубой и синей красками. Полы в церквях – красно-коричневой. Пахнет ладаном, дьякон Кирилл в красивой золотой рясе бережно поддерживает левой рукой правую кисть, у которой вместо пальцев – обрубки. Он радостно рассказывает о зимнем пределе церкви, о морозах -600, картошке и рыбке, утятах, о поездках по реке в соседние села, о том, как крестит детей националов, как ребятишек всё больше и больше и непонятно, кого крестили, а кого – нет. В соседнем летнем пределе идет служба, тонкие, как стаившие свечи, старушки боязливо молятся.","Это монастырь святой Троицы в Туруханске, состоит он из настоятеля и Кирила, который ведет для нас экскурсию.","На выходе потеряли маму, оказывается, она ушла на теплоход. Понервничали.","Потом был ужин, овощная смесь с рыбой чир и пирожками с капустой. На улице шёл дождь, сейчас проясняется. Капитан сделал нам одолжение и простоял в Туруханске дольше обычного, поэтому мы сейчас опаздываем. Следующий день обещает быть спокойным, остановки на рейде."],image:{src:"build/images/img_2.png",annotation:"Берег в районе Туруханска"}}]},{day:8,date:"12.07.2020",parts:[{time:"11:40 KJA",paragraphes:["Большая желтая машина сосредоточенно двигала поршнями, снабженными пружинами. Дизель жил своей жизнью, как будто вокруг его шумного, тесного мирка с медными табличками, рычагами, трубами ничего не существовало.","Старший механик хитро нас разглядывал и поддерживал дам под спинку. Машинное отделение оказалось на удивление большим, мы посмотрели три части – одну с дизелями, вторую - более тихую - с генераторами (работал один из трех), третью – с толстеньким котлом.","В общем это было очень интересно."],image:{src:"build/images/img_3.png",annotation:"Берег в районе Верхнеимбатска"}},{time:"13:20 KJA",paragraphes:["В ожидании обеда и Верхнеимбатска.","Плаванье проходит тихо. Остановки только на рейде. Команда смелых обсуждает идею высадки на берег. Солнечно. Оксана даже загорает. Мы пытаемся спрятаться от чересчур общительного дядечки. Не получается. Пытаюсь рисовать. Сложно не афишировать палетку с маркерами. Боюсь, что солнце плохо на них подействует. Как обычно ждём обеда. Мама читает книгу про ужасы искусственного интеллекта. Трясогузки ловят оводов. Наблюдали за одним таким в бинокль. В целом спокойно и ничего не происходит."],image:{src:"build/images/img_4.png",annotation:"Лодка по левому борту"}},{time:"18:15 KJA",paragraphes:["Сегодня была еще одна посадка на воде близ Верхнеимбатска. В десанте должны были участвовать два наших бойца. Опустили в воду бот, лодки с берега почтительно разошлись. Бот подошел к спущенной с борта лесенке. Стали грузить багаж, затем спустились пассажиры. Стоял штиль и посадка происходила спокойнее, чем в Потапово. Наконец все надели спасжилеты и выдвинулись. Наших среди них не было. Мы переглянулись. Удивились Таня и мама, которые уже приготовились запечатлевать момент. Кроме обычных грузов повезли какие-то доски и здоровенный алюминиевый лист, который пришлось поставить вертикально на манер паруса. Так наша лодка добралась до небольшого, выкрашенного в синий цвет дебаркадера. Там огромный лист отдали радостному хозяину, загрузились новые люди, в том числе маленький мальчик и две женщины с какими-то фикусами. Вся эта компания причалила к теплоходу, причем лодку к лестнице подтянула милая девушка в розовых шароварчиках. Поднялись две солидные дамы, причем не изменившись в лице, замученный дедушка. Мальчик выходить не хотел.","И только когда все вышли, зашли наши герои. Лодка совершила еще один рейс, забрала новых пассажиров. Они взошли на борт, а наши остались гордо сидеть в спасжилетах. Неожиданно лодка пошла вдоль левого борта, повернула, и, завершив круг почета, вернулась. Только после этого нам вернули товарищей. В общем, еще один комплимент от капитана.","Сейчас мы ждём Чулково. Идём с опозданием."]},{time:"20:20 KJA",paragraphes:["Три статных женщины, одна в обтягивающем серебристом платье с декольте, две других – в легких сиреневых, стоят на носу лодки и в сдерживаемом порыве смотрят на главную палубу. Маленькая светловолосая девочка глядит вверх  с открытым ртом из под руки матери. За штурвалом – усталый мужчина в изумительной фиолетовой косоворотке с вышитым воротом. В отдалении, на катере с рисунками на борту, следит за порядком седой крепкий дедушка, вылитый Ермак на пенсии. Лодки бьются друг о друга бортами, двое парней, один подпоясан синим кушаком, нарезают круги, внося дополнительную панику. На борт с суровым видом заходит пассажир. Отталкивает лодку и она, лишенная кормчево, медленно дрейфует по течению. Это Чулково, здесь живут староверы. Если бы своими глазами не увидела, не поверила бы – такие чудны́е люди.","В пурпурные рубашки они одеты из-за дня Петра и Павла. Хотя, как знать. Может приход парохода – это божий знак?","Людмила говорит, что это особенные староверы, общительные. Они живут на берегу вместе с обычными людьми.","Статный молодой мужчина всё в той же фиолетовой рубашке с вышивкой, ставит катер на дыбы и, описав щегольской полукруг, правя лодкой в полный рост, уходит.","Да-а, вот это умеют создать впечатление. Спойлер – брошенною лодку спасли."],image:{src:"build/images/img_5.png",annotation:"Старовер в лодке. Чулково"}}]},{day:9,date:"13.07.2020",parts:[{time:"8:00 KJA",paragraphes:["К нам подошла одна из женщин, севших в Чулково. Выспрашивала, откуда мы и куда. Возможно, искала компанию. Я перевела разговор на её внуков, после этого она как-то остановилась и ушла. Не могу отделаться от ощущения, что НКВД не дремлет. Ох уж мне этот Норильск. Женщины из староверов нервничают, постоянно звонят по телефону. Сейчас правда пошли спать. Наверное, связь пропала. О, берег подходит. Скоро пороги?"],image:{src:"build/images/img_6.png",annotation:"Устье реки близ Бора"}},{time:"10:20 KJA",paragraphes:["На бак пришёл боцман. На нём розовая футболка, джинсы и белые шлепки. Он сидит вполоборота и тревожно смотрит на воду. На приличествующем от него расстоянии – два матроса. Корабль входит в узкую, петляющую калию из пар бакенов. Раздаётся команда капитана, боцман встает со своего белого пляжного стула, открывает небольшой ящичек на самом носу, там оказывается связь. Берёт передатчик и ёмко рапортует: «На баке». В таком режиме мы и идем. Слева невысокий остров, потом отметки из красных бакенов, потом из белых, дальше, собственно, берег. Всё это, а также то, что мы не видим под водой – Осиновская система. Названа в честь ныне уже не существующей деревни лоцманов. Не смотря на хорошее оборудование, проход через пороги всё еще опасен. Река крутит водовороты, бакен явно отмечает сильное течение. В какой-то момент красные бакены кончаются, и капитан отпускает людей с бака. А мы уходим в ресторан за своей овсяной кашей и сырниками."],image:{src:"build/images/img_7.png",annotation:"Осиновская щека"}},{time:"14:00 KJA",paragraphes:["На выходе из ресторана сбрасываемся на чёрную икру. Покупать её будем у староверов, всё тех же. Утро я продрыхла, так как замерзла при прохождении Осиновской системы. В полудреме слышала как мама собирается на берег посетить базарчик. «Только держись Тани», - слабеющим голосом ответствовала я. Потом была швартовка. Детишки самозабвенно звали бабушку, какой-то мальчик заходился нигилизмом. Потом забежала мама наперевес с щучьей икрой и опять скрылась."],image:{src:"build/images/img_8.png",annotation:"Берег в районе Осиновской системы"}},{time:"",paragraphes:["Сонное сознание сомневалось, вернется ли она вовремя, до отплытия. Деятельное подсознание, беспокоящееся о здоровом сне, услужливо предполагало, что маму если что доставят катером.","Оказывается женщина, с которой мы разговаривали утром, в платье купалась в Енисее. Серьезный мужчина из экипажа, следящий за нашей безопасностью, в ответ на предложение мамы забрать купальщицу на борт, совершенно спокойно сказал: «Да она больная». В общем, Ворогово мы как-то пережили."],image:{src:"build/images/img_9.png",annotation:"Танкер близ Ярцево"}},{time:"",paragraphes:[],image:{src:"build/images/img_10.png",annotation:"Чёрная  икра и стерлядь"}}]},{day:10,date:"14.07.2020",parts:[{time:"12:30 KJA",paragraphes:["Ждём Енисейска. Уложили вещи. Сделали общее фото в солярии.","Я малость приболела. Лечусь лизобактом и антибиотиками. Боюсь попасть под луч врачебного лазера.","Местность стала более обитаемой. Домики, вышки. По Енисею идут баржи с контейнерами, везут лес, видели даже солидных размеров плот.","Детки продолжают топать.","По кораблю ходят загадочные женщины в выглаженных жакетах. Интересно, где они сели?"]},{time:"16:40 KJA",paragraphes:["Старые замки́ с тяжелыми, фигурными ключами. Дверцы печей с затейливыми сюжетами. Нежные, беззащитные фарфоровые статуэтки в виде хозяек с хлебами и самоварами. Большая печь, укрытая шкурой, сложные построения и переходы деревянного дома. Вещи доставлялись сюда с большим трудом, поэтому отношение к ним особое. Одни – коренные, их сделали местные кузницы и резчики. Другие -купеческих кровей, привезенные пароходом. Третьи – ссыльные, с клеймами европейских мастеров, затерянные в этом далёком краю, хранящие памятью о своей далекой родине разве что гордость.","Всё это экспозиция примечательного музея в Енисейске, с отдающим дань времени названием «Фото изба».","Хозяин – худенький пожилой мужчина, говорящий вдохновленным сиплым голосом и сильно волнующийся. Он разрывается между страхом за своих питомцев и желанием показать их гостям. Экскурсию ведёт его жена, страстная увлеченная женщина, передвигающаяся в потоке вещей, как казачий струг через пороги и мели.","Сам город тихий, домашний. Если не обращать внимание на плотную стену леса, то можно представить, что эта река – Волга, улочки словно списаны с Углича или Костромы. Резные белые ставни поверх почти чёрного лиственечного сруба, трогательные клумбы и бесшабашный бурьян дворов. Тихо, мило, уютно."],image:{src:"build/images/img_11.png",annotation:"Пороховница"}},{time:"22:00 KJA",paragraphes:["Наш гид (кажется, его зовут Игорь) соответствовал всем моим представлениям о сибиряке. У него были широкие плечи, аккуратная бородка и кроткое, полное мужественного смирения, выражение лица. В комплекте шла синяя футболка с логотипом «400» и надписью «экскурсовод». В общем, в моем вздохе было много нереализованных женских мечтаний.","Всей компанией, неспеша, мы двинулись на набережную. Каваления, в составе двух мальчишек велосипедистов, прикрывала наш фланг. Собака неизвестной породы шла по набережной и, смешно засунув голову, инспектировала урны. В какой-то момент её рабочий день закончился и собака принялась сопровождать нас на добровольных основах. В небе парил крупный сокол, отслеживающий наши передвижения еще с самой выгрузки с теплохода.","Было неожиданно тепло и солнечно, гид рассказывал деликатные шутки, и мы плыли мимо аккуратных, по северному маленьких купеческих домов, мимо храмов, училищ. Затем подошли к оврагу реки Мельничкой и мы с Таней рванули к фото избе, чтобы забрать любезно оставленную хозяевами закладку. Во время бега я с печалью отмечала, что чревоугодие явно не пошло на пользу моей подвижности. Таня нашла хитро припрятанный пакет с маминой кепкой, и мы побежали назад.","Над Енисейском, как в драматических сценах советского кино, стояла огромная грозовая туча, все переливы которой прекрасно передавали мои поляризационные очки.","Догнали группу и пошли по параллельной центральной улице. Где-то в этот момент нас настиг ливень и часть группы спряталась в магазине игрушек. Ждать пришлось долго, в итоге экспедиционеры купили зонты и гордо вышагивали под сенью мишек, божьих коровок и расцветки пляжного мяча. Так мы дошли до кружевного обширного мужского монастыря, где маму начали мучать смутные воспоминания. Дождь не прекращался, антибиотики бродили в моей крови, и мы приняли решение вернуться в гостиницу.","Там первым делом попросили кипятку, я побывала на кухне, где хозяйка посетовала, что ей надоело носить маску. Группа вернулась позже, говорят, их катали на фаэтоне.","Вечером за чаем (а нас наконец-то никто не торопил), хозяйка сказала, что наш первый гид успешно добралась до Диксона. Про себя я добавила: «Туда ей и дорога». Среди прочего были кексы со смородиновым вареньем.","Завтра опять в путь."],image:{src:"build/images/img_12.png",annotation:"Дождь в Енисейске"}}]},{day:11,date:"15.07.2020",parts:[{time:"22:50 KJA",paragraphes:["Накатывающий, дышащий шум машин. Сдвоенные огоньки фар ходко катятся по плоскости моста. Мягко-оранжевая подсветка опор, едва различимое колебание отражения. Там, внизу, откуда мы только что пришли, сонно гуляют молодые люди, коротают время баристы, свет рекламы играет в стекле. Там томно и суетно проходит городской вечер. Там, за окном – Красноярск. Дорога сюда была долгой.","Утром мама проснулась раньше всех и стала укладывать вещи. По приобретенной за последнее время привычке, я посмотрела на часы, но вставать раньше срока не собиралась. Пусть мой разум с грехом пополам функционировал, тело заслужило право лежать в постели до последнего. Нежно прозвенел будильник, и мы с Таней с синхронностью девиц из Смольного, поднялись.","После сборов стащила вещи вниз по узкой крутой лестнице. Утром, когда я находилась в приподнятом настроении, неудачно потянула ногу. Размять икру не было никакой возможности, так как обрабатываемую поверхность украшал путоранский синяк. Поэтому, когда спускала вещи, вес распределяла на здоровую ногу.","На дороге нас ждал вполне комфортабельный автобус, в который наша дисциплинированная группа загрузилась даже раньше обещанного. Мы оставили милую сердцу гостиницу Енисейскую и покатили по улице Ленина. Оказалось, она простирается далеко за границу реки Мельницкой. Домики по сторонам дороги заметно мельчали, пока не стали составлять по размеру приличные дачные. Тут автобус стал выделывать сложные маневры, и мы по началу решили, что водитель заблудился. На деле он привёз нас в музей рубанка.","Во дворе нас встретил очень активный дядечка в маске. Местные прилежно выполняют правила профилактики ковида, но не все, а те, которые им нравятся.","Музей состоит из длинного, во всю стену, стеллажа с самыми разными рубанками, а также сопутствующими инструментами. Хозяин демонстрировал интересные экспонаты, в том числе из нескольких пород дерева, эбена, даже шоколада. Чтобы гости не озорничали, в начале экскурсии он ненавязчиво настругал лист бумаги исключительно острым топором. Про себя сказал, что работает шофёром и там он тоже сумасшедший. Факт, описывающий хозяина коллекции – освоил интернет, чтобы выйти на форум знатоков рубанков. Как тебе такое, Илон Маск?!","На сладкое зарядил нам пластинку Утёсова и подписал книжки о своих приключениях. В общем, мне бы его энергию.","Дальше автобус покатил по улице, параллельной Енисею. Судоходство заметно оживилось, появилось много барж с лесом. Проехали мимо вполне солидного порта. Все дальше и дальше, через молчаливое построение хрущевок, мимо нового, сложной архитектуры храма и через бесконечный, правда уже сосновый лес.","Дорога была вполне приемлемой, правда вдруг стала сужаться. Когда я уже вольготно примостилась с намерением поспать, мы остановились у базы «Заимка». Путешествие в дамскую комнату позволило нам оценить простор и внутреннее убранство в доме. Во дворе висел кипельно-белый череп и старая сеть, а также цвело много затейливо посаженных цветов. Немного постояли во дворе и двинулись к катеру.","После путешествия по Ламе переживала, что не захватила вторую флиску, но обошлось. Катер оказался довольно большим, длинным, узким, с внутренним помещением, закрытым экраном. Нам выдали спасжилеты (вот это да, а так можно было?) которые, как оказалось, еще и неплохо грели. К нам присоединилась восторженная и веселая женщина с неожиданно исправным микрофоном, и дело заладилось.","На Енисее пошла волна, впрочем, нас было уже сложно напугать. Дошли до впадения Ангары. В учебниках и картах переход западной Сибири в восточную изображался резко, ступенькой. Это всегда казалось мне как-то неправдоподобно. Но на деле так и есть. Правый берег Ангары похож на большие кирпичные кладки, поехавшие по диагонали. Прошли Стрелку, посмотрели на забетонированные штольни урановых рудников. Может, здесь и коротал своё заключение Урванцев?","Потом пошли пороги, заметные, впрочем, только по хаотичному движению воды. Так мы добрались до острова, похожего на гору из круглых, обточенных белых глыб. На камнях росли сосны, в расщелинах – клюква, было тепло и привольно. Пыталась, подражая местным, лечить свои болезни, распластавшись на кварцевом валуне. Чуть не уснула."],image:{src:"build/images/img_13.png",annotation:"Пороги на Ангаре"}},{time:"",paragraphes:["На обед подали блистательную уху из чира, сига и стерляди, с добавлением водки и доведением до вкуса с помощью обожженной в костре деревяшки. А также исключительного сладкого жаренного на огне хариуса.","Пока мы обедали, буксиры вели через пороги баржи и плот с лесом. Плот, говорят, развалился. Возможно эта неприятность произошла из-за своеобразной конструкции туалетов, лишённых одной стены, и обращенных проемом к берегу.","Погуляв и пообедав, загрузились в щукоподобный катер и двинулись назад. На «Заимке» пообщались с хозяйкой, на прощание она прочитала длинное стихотворение, которое, если бы не это путешествие, наверняка заманило бы меня в Сибирь.","Дорога на юг была долгой, но легкой. Мои ноги устали в треккинговых ботинках, пришлось разуться. Шел бесконечнй лес, потом он стал расступаться, уступая место полям с низкорослой пшеницей и овсом. Пейзаж за окном стремительно приближался к пасторали центральной России. Пошли лишённые леса холмы, и я со странным чувством подумала, что Великий лес, тянущийся от Дудинки, кончился.","В Красноярске мы заселились в неожиданно большую гостиницу и славно отужинали пельменями в горшочке под крышкой из слоеного теста. На десерт подали бруснику с медом и кедровыми орешками. По мозгам бьет не хуже спиртного.","В номере я наконец-то смыла с плеч еще талнахский эплан [средство для заживления кожи]. От камариных укусов остались только тёмные пятна. Меня качает после дороги и катера, пойду спать."]}]},{day:12,date:"16.07.2020",parts:[{time:"21:16 KJA",paragraphes:["Чёт я подустала. Сегодня был насыщенный день, впечатления уже не усваиваются. Безумно вкусная еда тоже впитывается с трудом.","Утром долго ждали завтрак. После вчерашнего триумфального ужина, ожидания были внушительными. В итоге срок истёк, и мама вышла с кистенём на дорогу, то бишь в коридор, нашла там девушку с тележкой еды и отжала у неё два пакета. Всё было очень вкусно, большое разнообразие. Когда я поглотила блинчики и обнаружила такой же джем в круассане, меня посетили сомнения, что еда, похоже, была предоставлена на выбор. [a я не знала об этом, и слопала всё, что принесли].","После завтрака собрались в холле. Пришли рано, был только вахтовик (который, после случая на Ламе относился к расписанию с пиететом). Коротала время, рассматривая цихлид в большом аквариуме.","Наконец все собрались, выяснилось, что кто-то остался без завтрака. Нам выдали экскурсавода и отправили на захват города.","Захват происходил неспешно. Долго стояли у фонтана рек Сибири. Тонкие, драмматические девушки, олицетворявшие притоки Енисея, с легкой брезгливостью смотрели по сторонам. Говорят, их лепили с балерин соседнего театра. Центр композиции занимал смахивающий одновременно на Нептуна и главу города Енисей. За его спиной, вытянув вперед длинные ноги, летела Ангара. Складывалось ощущение, что она опаздывает.","На крыше соседнего дома сидели строители в комбинизонах на голое тело. Они рассматривали нашу толпу, я – их.","Обманным манёвром, стараясь не попадаться на глаза окнам внушительного здания администрации, погрузились на автобус. Мы опять были под прикрытием, но теперь уже без легенды вообще.","Дальше была классическая обзорная экскурсия с поворотами головы на лево, на право и походу движения. В тексте причудливо смешивались советские конструкции про подъём промышленности, задорную молодёжь, революционеров с робким, искренним сожалением о потерях девяностых и с уверенным перечислением местных святынь. Мы ехали по улочкам, временами перегораживая их, перебегали дорогу в неположенном месте. Кстати, ремарка. В Красноярске интересный вид социальной рекламы. Билборды с надписями в стиле: «Не пристягнулся? Сдохни, гад!» или «Сломал шею? Так тебе и надо, упырь!». Ничего не могу сказать, насколько это эффективно, не считая пробок на дорогах вполне сносно.","Поплутав по улицам, вышли у маленькой площади с часами. Верхние, металлические, не шли. Их нужно было отвезти обратно на Урал для починки. Нижние - песочные - тоже остановились. По низу часов шли разные мотивационные надписи про время, которые, в свете поломки выглядели как чугунные стикеры с напоминаниями. Обычно на этой площали гуляют молодожёны и всё усеяно лепестками. Но был будничный день, нас встретил только чугунный пьяница и сикающая на него собачка. Народ фоткался, мама сидела на скамейке, я рассматривала в просвете между домами оптимистичные белые высотки на другом берегу Енисея. К нам подошел красивый местный парень в рубашке в мелкий горошек, немного поспрашивал и ушёл.","Потом мы еще попетляли по улочкам и вышли у площади Мира. Было солнечно, пусто, местные девушки уверенно рассекали прогретый воздух на роликовых коньках. Подвесной пешеходный мост манил строгой легкостью линий, хотелось наесться мороженного насмерть. За спиной стояла заметная высотка местного миллионера, купленная когда-то за 19 млн. рублей. Были же времена.","Пошли по пешеходному мосту, было приятное ощущение выходных, что можно не спешить, и мы просто выбрались в центр родного города на прогулку. Когда я окончательно обрадовалась, мы резко свернули и спустились с моста. Впрочем, внизу тоже было хорошо."],image:{src:"build/images/img_14.png",annotation:"Мост у впадения реки Кача"}},{time:"",paragraphes:["На набережной кормили голубей, деятельные утки совершали водный патруль. Мы качались на качелях, гид никуда не спешил, и было очень привольно и хорошо. Прошли дальше в сторону Комунального моста, обнаружили  бравый колесный пароход Светитель Николай. Мама приставала к гиду, мы приспосабливались к формату посещения музея, когда только смотрим со стороны, но не заходим.","После этого домчались до гостиницы и обедали. Я сокрушалась, что не могу полежать в хрустящем минимализме номера и вынуждена есть божественную еду впопыхах. Право, это было святотатство. Подали суп с клецами и на второе овощи с куриным рулетом. Еде в этой гостинице можно смело посвятить отдельный тур. А эти крошечные морковки… Ладно, продолжим.","Во второй части наш путь шёл в Дивногорск. Мы пересекли Енисей и углубились в лес правого берега. Дорога принялась петлять и артачиться, но хорошее покрытие и близость города сглаживали ощущение. Остановились на смотровой площадке.","Таня и Ольга стояли на краю, а за ними, по невидимой воздушной спирали, точно и умело поднимались в небо три орла. Этих хищных птиц в округе вообще много, летают они часто достаточно низко и можно рассмотреть, как, опершись в полете на широкие крылья, они вертят головой, разглядывая, что происходит внизу.","На площадке сидел дядечка и наяривал попурри из советских песен. Мама спонсировала искусство и чуть не отдала очень востребованную в здешних краях бумажную десятирублевку.","Потом мы ехали в Дивногорск, по пути завернув в Овсянки, где постояли у забора дома Астафьева и немного побыли на берегу Енисея. Щебень приятного терракотового цвета, что оправдывает название города – Красный Яр."],image:{src:"build/images/img_15.png",annotation:"Небо близ Ворогово"}},{time:"",paragraphes:["Собственно, Дивногорск оказался очень приятным, чистым городком, эдаким заповедником советской утопии. Хорошая набережная с видом на почти вертикальный, обрывистый высокий противоположный берег Енисея.","Долго пробирались через лес, проехали под опорами судоподъёмника. Эти рельсы под наклоном на высоких железобетонных столбах, а также стоящий в отдалении, напоминающий огромную баржу контейнер для кораблей по своей циклопичности и безбашенности опережает даже плотину на Енисее.","Сама ГЭС компактная, хорошо вписанная в окрестные скалы, вызывает ощущение скорее аккуратно обработанной скалы, чем бетонного сооружения. Экскурсовод рассказывала о наводнениях и как спускали воду с той характерной сибирской интонацией, с какой нам рассказывали про выбрасы газа в Норильске. Мол, смотрите, какого уровня капец мы можем перенести.","Обратно я была совершенно умотанной и думала только о водичке и гостинице. Надо потихоньку снижать обороты."],image:{src:"build/images/img_16.png",annotation:"Камень Дед"}}]},{day:13,date:"17.07.2020",parts:[{time:"15:35 KJA",paragraphes:["Красноярские столбы – просторный, ухоженный парк. Дорога идет то вверх, то вниз по красноватому щебню и корням. Много пихт, часть из них болеет. Иногда можно встретить сочно-зеленый пушистый кедр. Сами столбы похожи на огромные горки из гальки, мягко тонированные мхом. В кое то веке у нас был нормальный гид, который не спешил, и знал дорогу. Если залезть наверх, можно увидеть волны леса, спускающиеся к Енисею, в отдалении – белые крапочки Красноярска. Лезть вверх нормально, спускаться вниз уже страшновато. Иногда приходится «методом попы», то есть садясь и сползая. На обратном пути потеряли Валеру, гид испугалась, мы отнеслись как к привычному событию. Потом шли по тропинке, на обочине цвели незабудки. Откуда-то вынырнул местный столбист и спросил: «Откуда идёте?». «Из Астрахани», - ответил наш внушительный экспедиционер."],image:{src:"build/images/img_17.png",annotation:"Перья"}},{time:"22:15 KJA",paragraphes:["На набережной было много людей. Мимо нас по велосипедной дорожке проносились дети и взрослые на самокатах, коньках. У красивого высокого со шпилем речпорта стоял наш теплоход, двое матросов шли к нему и о чём-то говорили. Недалеко судно поменьше лихо разворачивалось против течения. В кафе жарили мясо, играло фортепиано, упитанные сибирские пальмы в кадках исправно поглощали солнце. Мы шли навстречу Коммунальному мосту и его совершенные арки служили четкой темной рамкой для блестящего пятничного мира по ту сторону, со стоящим у причала теплоходом, и уходящей вдаль – щека к щеке с Енисеем – пристани. Всё в этот пятничный вечер напоминало самый разгар праздника, когда платья еще не помяты и посуда цела.","Под мостом вокруг небольшой сцены сидели исполненные искусства подростки, кто-то с боязливым видом тренькал на гитаре. Мы прошли дальше, и нас снова залило солнце и лето.","На террасу выше работал художник, неспеша заполняя балончиком графити. Его муза сидела поодаль с видом вселенского терпения. Мы пересекли дорогу, обнаружили множество людей вокруг фонтана рек Сибири. Шли выше и выше, подул холодный ветер, Таня надела флиску. Мы идеально уложились и успели точь-в-точь к ужину.","Прощальному ужину."]}]},{day:14,date:"18.07.2020",parts:[{time:"16:10 KJA",paragraphes:["Утром с трудом оторвались от гостиницы. Походили по городу, понаблюдали влияние короновируса на кофейни. Зашли на центральный рынок, здание с внушительным куполом. Внутри ощутили эффективный сибирский маркетинг, в результате чего купили оленины и медвежатины.","Потом в рамках истекающего времени погуляли с Таней по набережной. Все наши действия носили оттенок скорого отъезда.","Водитель белой тайоты вез нас по просторным развязкам, мимо холмов с мягко-красными откосами, мимо лугов и аккуратных домиков.","В аэропорту маму задержали за провоз блёсен в особо крупных размерах. Но где наша не пропадала. Сдали багаж, прошли контроль и сейчас ждём посадки.","За окном взлётная полоса и на другой стороне, с видом прилежного зрителя, вездесущий лес.","Аэропорт в Красноярске стильный, с льдинково-снежными мотивами. Персонала больше, чем пассажиров, поэтому досматривают внимательно. Даму на высокой танкетке заставила разуться и в качестве штрафа забрали у неё объемный тюбик крема.","Загадкой осталось командой какого вида спорта была толпа молодых парней, стоящих в очереди на регистрацию в Анапу и везущих большие блестящие металлические ящики."]},{time:"17:50 KJA",paragraphes:["Шум двигателей слился в равномерный гул, борт убрал механизацию. Фюзеляж постепенно выравнивается. Мы летим с четырьмя детишками, двое из которых малыши. Веселенькие будут четыре с половиной часа. Спасибо что хоть комаров нет.","Итак, мы летим в Москву. Две недели назад мама, Таня, я, и Танин тонометр оставили позади старую добрую Русскую равнину. Мы пролетели над чёрными, покрытыми снегом вершинами Северного Урала. Плыли в молоке над озерами и торфянниками Таймыра. Тряслись в автобусе по тундре, возжелая Кайеркан. Мы скрывали свою личность среди труб Норильска. Бороздили реки и озера под рукой смелого капитана. Мы не сходили с, мать её, тропы в глухих и затерянных горах Путорана. Болтались в шторм на озере Мелкое. Бесконечно ели и смотрели на Енисей на борту теплохода А.Матросов. Вместе с командой следили за бурунами Осиновской системы. Пережили захват судна староверами. Лазали по камням Караульного острова на Ангаре, сопереживали разваливающемуся плоту. Покупали зонт в Енисейске. И не поддались (почти) лоску Красноярска. Эпохальная дорога.","Сибирь замкнута сама на себе. В её землях много богатств, в её людях – энтузиазма. Здесь философски относятся к расстояниям, и бережно – к еде. Не ждут отставших и не надеются на помощь. Остальную страну воспринимают как странное пространство, из которого требуют денег, присылают дурацкие, не совместимые с реальностью законы, и отправляют в ссылку людей и вещи.","Себе на уме – так бы я охарактеризовала людей, с которыми нам довелось встретиться. Они следуют тем правилам, которые им нравятся, и гордятся теми горестями, которые пережили. Эти люди упорно не видят своей идентичности, ровно, как и тяжести своей жизни. Минус пятьдесят мороза? Самое время рвануть на Столбы, главное не забыть сфоткаться с термометром. Енисей? Перегородим. Церковная реформа 1666? Впервые слышим.","Отдельная история – Заполярье. Это какой-то сплошной мемориал советским первопроходцам. Старое доедается, новое – редко планируется. Там такая запредельная жизнь, что заключённых ГУЛАГ-а местные воспринимают в первую очередь как раб.силу. Мол, жалко конечно, что из-за плохих условий те так мало проработали.","Горы Путорана произвели на меня странное впечатление. Это был мой предел. Редкий случай, но мне не захотелось посмотреть, что там, в верховьях реки Бунисяк. Люди встретили нас холодно, природа – с искренней радостью комаров. Хотя, конечно, то время, когда мы сидели наверху, смотрели на долину Ламы, расположившись на теплых камнях, я отнесу к золотому фонду своей памяти.","Енисей – чистая, крепкая, довольно однообразная река. Его люди погружены в борьбу за выживание, редко прямо отвечают на поставленный вопрос. Вода холодная, стерлядь отменная. Если случится апокалипсис, жители Енисея его скорее всего не заметят.","Ну и Красноярск, в объятия которого мы упали прямо из тайги. Прямые улицы, компактное расположение, блага цивилизации. Город расщедрился на погоду, и только отсутствие конспиративной легенды напрягало.","Странное дело, после этого путешествия я зауважала свою родную Центральную Россию. И задумалась, что, пожалуй, хватит себя мучить, нужно искать покой и довольство.","Наш боинг уверенно стоит на крыле, дети галдят, стюардессы в оранжевой форме разносят пледы. Я сделала что могла, пусть другие сделают больше."]},{time:"21:50 MSK",paragraphes:["Список обязательств мельчает на глаза. Раньше столько всего нужно было помнить. А теперь только разбудить папу и напомнить Тане про такси.","Благодаря искусству наших пилотов, мы прибыли в Москву раньше. Маленькая голосистая девочка и её мама продолжала преследовать нас в коридорах аэропорта и даже в туалете.","Вышли из здания и стали вызывать такси. Снаружи было тесно, серо, сутолока из машин. В итоге нашли свою. Спешно попрощались с Таней. Она осталась на обочине с характерным деловым выражением лица и с телефоном у уха.","Вежливый уроженец Средней Азии удивился, что мы только что прилетели, и уже опять улетаем. Впрочем, разговорами нас не беспокоил.","Мы мчались по Кольцевой, мимо бесконечных новостроек, молов, развязок. В итоге приехали в Домодедово рано. Зато в коем то веке шли неспеша.","Like a boss прошли регистрацию, ибо не впервой. Посидели в Му-му. В пику мужчине из очереди, заказавшему пива, купила большую кружку компота.","Сейчас ждём посадки, состояние отупения."]}]},{day:15,date:"19.07.2020",parts:[{time:"3:50 ULV",paragraphes:["В моей комнате всё по-прежнему. Только воздух застоялся, и наплодилось много ампулярий [аквариумных улиток]. Мы вернулись. Ляжем спать, не разбирая вещи."]}]}];var journal = {title:title,epigraphes:epigraphes,articles:articles};

    var data = /*#__PURE__*/Object.freeze({
        __proto__: null,
        title: title,
        epigraphes: epigraphes,
        articles: articles,
        'default': journal
    });

    /* node_modules\svelte-waypoint\src\Waypoint.svelte generated by Svelte v3.29.7 */
    const file = "node_modules\\svelte-waypoint\\src\\Waypoint.svelte";

    // (139:2) {#if visible}
    function create_if_block(ctx) {
    	let current;
    	const default_slot_template = /*#slots*/ ctx[11].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[10], null);

    	const block = {
    		c: function create() {
    			if (default_slot) default_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && dirty & /*$$scope*/ 1024) {
    					update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[10], dirty, null, null);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block.name,
    		type: "if",
    		source: "(139:2) {#if visible}",
    		ctx
    	});

    	return block;
    }

    function create_fragment(ctx) {
    	let div;
    	let div_class_value;
    	let waypoint_action;
    	let current;
    	let mounted;
    	let dispose;
    	let if_block = /*visible*/ ctx[3] && create_if_block(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "class", div_class_value = "wrapper " + /*className*/ ctx[2] + " " + /*c*/ ctx[0] + " svelte-142y8oi");
    			attr_dev(div, "style", /*style*/ ctx[1]);
    			add_location(div, file, 137, 0, 3091);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;

    			if (!mounted) {
    				dispose = action_destroyer(waypoint_action = /*waypoint*/ ctx[4].call(null, div));
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*visible*/ ctx[3]) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*visible*/ 8) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}

    			if (!current || dirty & /*className, c*/ 5 && div_class_value !== (div_class_value = "wrapper " + /*className*/ ctx[2] + " " + /*c*/ ctx[0] + " svelte-142y8oi")) {
    				attr_dev(div, "class", div_class_value);
    			}

    			if (!current || dirty & /*style*/ 2) {
    				attr_dev(div, "style", /*style*/ ctx[1]);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function throttleFn(fn, time) {
    	let last, deferTimer;

    	return () => {
    		const now = +new Date();

    		if (last && now < last + time) {
    			// hold on to it
    			clearTimeout(deferTimer);

    			deferTimer = setTimeout(
    				function () {
    					last = now;
    					fn();
    				},
    				time
    			);
    		} else {
    			last = now;
    			fn();
    		}
    	};
    }

    function instance($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Waypoint", slots, ['default']);
    	const dispatch = createEventDispatcher();
    	let { offset = 0 } = $$props;
    	let { throttle = 250 } = $$props;
    	let { c = "" } = $$props;
    	let { style = "" } = $$props;
    	let { once = true } = $$props;
    	let { threshold = 1 } = $$props;
    	let { disabled = false } = $$props;
    	let { class: className = "" } = $$props;
    	let visible = disabled;
    	let wasVisible = false;
    	let intersecting = false;

    	let removeHandlers = () => {
    		
    	};

    	function callEvents(wasVisible, observer, node) {
    		if (visible && !wasVisible) {
    			dispatch("enter");
    			return;
    		}

    		if (wasVisible && !intersecting) {
    			dispatch("leave");
    		}

    		if (once && wasVisible && !intersecting) {
    			removeHandlers();
    		}
    	}

    	function waypoint(node) {
    		if (!window || disabled) return;

    		if (window.IntersectionObserver && window.IntersectionObserverEntry) {
    			const observer = new IntersectionObserver(([{ isIntersecting }]) => {
    					wasVisible = visible;
    					intersecting = isIntersecting;

    					if (wasVisible && once && !isIntersecting) {
    						callEvents(wasVisible);
    						return;
    					}

    					$$invalidate(3, visible = isIntersecting);
    					callEvents(wasVisible);
    				},
    			{ rootMargin: offset + "px", threshold });

    			observer.observe(node);
    			removeHandlers = () => observer.unobserve(node);
    			return removeHandlers;
    		}

    		function checkIsVisible() {
    			// Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93
    			if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;

    			let top;
    			let height;

    			try {
    				({ top, height } = node.getBoundingClientRect());
    			} catch(e) {
    				({ top, height } = defaultBoundingClientRect);
    			}

    			const windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;
    			wasVisible = visible;
    			intersecting = top - offset <= windowInnerHeight && top + height + offset >= 0;

    			if (wasVisible && once && !isIntersecting) {
    				callEvents(wasVisible, observer);
    				return;
    			}

    			$$invalidate(3, visible = intersecting);
    			callEvents(wasVisible);
    		}

    		checkIsVisible();
    		const throttled = throttleFn(checkIsVisible, throttle);
    		window.addEventListener("scroll", throttled);
    		window.addEventListener("resize", throttled);

    		removeHandlers = () => {
    			window.removeEventListener("scroll", throttled);
    			window.removeEventListener("resize", throttled);
    		};

    		return removeHandlers;
    	}

    	const writable_props = ["offset", "throttle", "c", "style", "once", "threshold", "disabled", "class"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Waypoint> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ("offset" in $$props) $$invalidate(5, offset = $$props.offset);
    		if ("throttle" in $$props) $$invalidate(6, throttle = $$props.throttle);
    		if ("c" in $$props) $$invalidate(0, c = $$props.c);
    		if ("style" in $$props) $$invalidate(1, style = $$props.style);
    		if ("once" in $$props) $$invalidate(7, once = $$props.once);
    		if ("threshold" in $$props) $$invalidate(8, threshold = $$props.threshold);
    		if ("disabled" in $$props) $$invalidate(9, disabled = $$props.disabled);
    		if ("class" in $$props) $$invalidate(2, className = $$props.class);
    		if ("$$scope" in $$props) $$invalidate(10, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		createEventDispatcher,
    		onDestroy,
    		dispatch,
    		offset,
    		throttle,
    		c,
    		style,
    		once,
    		threshold,
    		disabled,
    		className,
    		visible,
    		wasVisible,
    		intersecting,
    		removeHandlers,
    		throttleFn,
    		callEvents,
    		waypoint
    	});

    	$$self.$inject_state = $$props => {
    		if ("offset" in $$props) $$invalidate(5, offset = $$props.offset);
    		if ("throttle" in $$props) $$invalidate(6, throttle = $$props.throttle);
    		if ("c" in $$props) $$invalidate(0, c = $$props.c);
    		if ("style" in $$props) $$invalidate(1, style = $$props.style);
    		if ("once" in $$props) $$invalidate(7, once = $$props.once);
    		if ("threshold" in $$props) $$invalidate(8, threshold = $$props.threshold);
    		if ("disabled" in $$props) $$invalidate(9, disabled = $$props.disabled);
    		if ("className" in $$props) $$invalidate(2, className = $$props.className);
    		if ("visible" in $$props) $$invalidate(3, visible = $$props.visible);
    		if ("wasVisible" in $$props) wasVisible = $$props.wasVisible;
    		if ("intersecting" in $$props) intersecting = $$props.intersecting;
    		if ("removeHandlers" in $$props) removeHandlers = $$props.removeHandlers;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		c,
    		style,
    		className,
    		visible,
    		waypoint,
    		offset,
    		throttle,
    		once,
    		threshold,
    		disabled,
    		$$scope,
    		slots
    	];
    }

    class Waypoint extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance, create_fragment, safe_not_equal, {
    			offset: 5,
    			throttle: 6,
    			c: 0,
    			style: 1,
    			once: 7,
    			threshold: 8,
    			disabled: 9,
    			class: 2
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Waypoint",
    			options,
    			id: create_fragment.name
    		});
    	}

    	get offset() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set offset(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get throttle() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set throttle(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get c() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set c(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get style() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set style(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get once() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set once(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get threshold() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set threshold(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get disabled() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set disabled(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Waypoint>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Waypoint>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules\svelte-image\src\Image.svelte generated by Svelte v3.29.7 */
    const file$1 = "node_modules\\svelte-image\\src\\Image.svelte";

    // (65:0) <Waypoint   class="{wrapperClass}"   style="min-height: 100px; width: 100%;"   once   {threshold}   disabled="{!lazy}" >
    function create_default_slot(ctx) {
    	let div2;
    	let div1;
    	let div0;
    	let t0;
    	let img0;
    	let img0_class_value;
    	let img0_src_value;
    	let t1;
    	let picture;
    	let source0;
    	let t2;
    	let source1;
    	let t3;
    	let img1;
    	let img1_src_value;
    	let img1_class_value;
    	let load_action;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div1 = element("div");
    			div0 = element("div");
    			t0 = space();
    			img0 = element("img");
    			t1 = space();
    			picture = element("picture");
    			source0 = element("source");
    			t2 = space();
    			source1 = element("source");
    			t3 = space();
    			img1 = element("img");
    			set_style(div0, "width", "100%");
    			set_style(div0, "padding-bottom", /*ratio*/ ctx[7]);
    			add_location(div0, file$1, 73, 6, 1408);
    			attr_dev(img0, "class", img0_class_value = "placeholder " + /*placeholderClass*/ ctx[13] + " svelte-a3bmbz");
    			if (img0.src !== (img0_src_value = /*src*/ ctx[4])) attr_dev(img0, "src", img0_src_value);
    			attr_dev(img0, "alt", /*alt*/ ctx[1]);
    			add_location(img0, file$1, 74, 6, 1469);
    			attr_dev(source0, "type", "image/webp");
    			attr_dev(source0, "srcset", /*srcsetWebp*/ ctx[6]);
    			attr_dev(source0, "sizes", /*sizes*/ ctx[9]);
    			add_location(source0, file$1, 76, 8, 1552);
    			attr_dev(source1, "srcset", /*srcset*/ ctx[5]);
    			attr_dev(source1, "sizes", /*sizes*/ ctx[9]);
    			add_location(source1, file$1, 77, 8, 1619);
    			if (img1.src !== (img1_src_value = /*src*/ ctx[4])) attr_dev(img1, "src", img1_src_value);
    			attr_dev(img1, "class", img1_class_value = "main " + /*c*/ ctx[0] + " " + /*className*/ ctx[14] + " svelte-a3bmbz");
    			attr_dev(img1, "alt", /*alt*/ ctx[1]);
    			attr_dev(img1, "width", /*width*/ ctx[2]);
    			attr_dev(img1, "height", /*height*/ ctx[3]);
    			toggle_class(img1, "blur", /*blur*/ ctx[8]);
    			add_location(img1, file$1, 78, 8, 1655);
    			add_location(picture, file$1, 75, 6, 1534);
    			set_style(div1, "position", "relative");
    			set_style(div1, "overflow", "hidden");
    			add_location(div1, file$1, 72, 4, 1350);
    			set_style(div2, "position", "relative");
    			set_style(div2, "width", "100%");
    			attr_dev(div2, "class", "svelte-a3bmbz");
    			toggle_class(div2, "loaded", /*loaded*/ ctx[15]);
    			add_location(div2, file$1, 71, 2, 1286);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div1);
    			append_dev(div1, div0);
    			append_dev(div1, t0);
    			append_dev(div1, img0);
    			append_dev(div1, t1);
    			append_dev(div1, picture);
    			append_dev(picture, source0);
    			append_dev(picture, t2);
    			append_dev(picture, source1);
    			append_dev(picture, t3);
    			append_dev(picture, img1);

    			if (!mounted) {
    				dispose = action_destroyer(load_action = /*load*/ ctx[16].call(null, img1));
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*ratio*/ 128) {
    				set_style(div0, "padding-bottom", /*ratio*/ ctx[7]);
    			}

    			if (dirty & /*placeholderClass*/ 8192 && img0_class_value !== (img0_class_value = "placeholder " + /*placeholderClass*/ ctx[13] + " svelte-a3bmbz")) {
    				attr_dev(img0, "class", img0_class_value);
    			}

    			if (dirty & /*src*/ 16 && img0.src !== (img0_src_value = /*src*/ ctx[4])) {
    				attr_dev(img0, "src", img0_src_value);
    			}

    			if (dirty & /*alt*/ 2) {
    				attr_dev(img0, "alt", /*alt*/ ctx[1]);
    			}

    			if (dirty & /*srcsetWebp*/ 64) {
    				attr_dev(source0, "srcset", /*srcsetWebp*/ ctx[6]);
    			}

    			if (dirty & /*sizes*/ 512) {
    				attr_dev(source0, "sizes", /*sizes*/ ctx[9]);
    			}

    			if (dirty & /*srcset*/ 32) {
    				attr_dev(source1, "srcset", /*srcset*/ ctx[5]);
    			}

    			if (dirty & /*sizes*/ 512) {
    				attr_dev(source1, "sizes", /*sizes*/ ctx[9]);
    			}

    			if (dirty & /*src*/ 16 && img1.src !== (img1_src_value = /*src*/ ctx[4])) {
    				attr_dev(img1, "src", img1_src_value);
    			}

    			if (dirty & /*c, className*/ 16385 && img1_class_value !== (img1_class_value = "main " + /*c*/ ctx[0] + " " + /*className*/ ctx[14] + " svelte-a3bmbz")) {
    				attr_dev(img1, "class", img1_class_value);
    			}

    			if (dirty & /*alt*/ 2) {
    				attr_dev(img1, "alt", /*alt*/ ctx[1]);
    			}

    			if (dirty & /*width*/ 4) {
    				attr_dev(img1, "width", /*width*/ ctx[2]);
    			}

    			if (dirty & /*height*/ 8) {
    				attr_dev(img1, "height", /*height*/ ctx[3]);
    			}

    			if (dirty & /*c, className, blur*/ 16641) {
    				toggle_class(img1, "blur", /*blur*/ ctx[8]);
    			}

    			if (dirty & /*loaded*/ 32768) {
    				toggle_class(div2, "loaded", /*loaded*/ ctx[15]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot.name,
    		type: "slot",
    		source: "(65:0) <Waypoint   class=\\\"{wrapperClass}\\\"   style=\\\"min-height: 100px; width: 100%;\\\"   once   {threshold}   disabled=\\\"{!lazy}\\\" >",
    		ctx
    	});

    	return block;
    }

    function create_fragment$1(ctx) {
    	let waypoint;
    	let current;

    	waypoint = new Waypoint({
    			props: {
    				class: /*wrapperClass*/ ctx[12],
    				style: "min-height: 100px; width: 100%;",
    				once: true,
    				threshold: /*threshold*/ ctx[10],
    				disabled: !/*lazy*/ ctx[11],
    				$$slots: { default: [create_default_slot] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(waypoint.$$.fragment);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			mount_component(waypoint, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const waypoint_changes = {};
    			if (dirty & /*wrapperClass*/ 4096) waypoint_changes.class = /*wrapperClass*/ ctx[12];
    			if (dirty & /*threshold*/ 1024) waypoint_changes.threshold = /*threshold*/ ctx[10];
    			if (dirty & /*lazy*/ 2048) waypoint_changes.disabled = !/*lazy*/ ctx[11];

    			if (dirty & /*$$scope, loaded, src, c, className, alt, width, height, blur, srcset, sizes, srcsetWebp, placeholderClass, ratio*/ 189439) {
    				waypoint_changes.$$scope = { dirty, ctx };
    			}

    			waypoint.$set(waypoint_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(waypoint.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(waypoint.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(waypoint, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$1($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Image", slots, []);
    	let { c = "" } = $$props; // deprecated
    	let { alt = "" } = $$props;
    	let { width = null } = $$props;
    	let { height = null } = $$props;
    	let { src = "" } = $$props;
    	let { srcset = "" } = $$props;
    	let { srcsetWebp = "" } = $$props;
    	let { ratio = "100%" } = $$props;
    	let { blur = false } = $$props;
    	let { sizes = "(max-width: 1000px) 100vw, 1000px" } = $$props;
    	let { threshold = 1 } = $$props;
    	let { lazy = true } = $$props;
    	let { wrapperClass = "" } = $$props;
    	let { placeholderClass = "" } = $$props;
    	let { class: className = "" } = $$props;
    	let loaded = !lazy;

    	function load(img) {
    		img.onload = () => $$invalidate(15, loaded = true);
    	}

    	const writable_props = [
    		"c",
    		"alt",
    		"width",
    		"height",
    		"src",
    		"srcset",
    		"srcsetWebp",
    		"ratio",
    		"blur",
    		"sizes",
    		"threshold",
    		"lazy",
    		"wrapperClass",
    		"placeholderClass",
    		"class"
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Image> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ("c" in $$props) $$invalidate(0, c = $$props.c);
    		if ("alt" in $$props) $$invalidate(1, alt = $$props.alt);
    		if ("width" in $$props) $$invalidate(2, width = $$props.width);
    		if ("height" in $$props) $$invalidate(3, height = $$props.height);
    		if ("src" in $$props) $$invalidate(4, src = $$props.src);
    		if ("srcset" in $$props) $$invalidate(5, srcset = $$props.srcset);
    		if ("srcsetWebp" in $$props) $$invalidate(6, srcsetWebp = $$props.srcsetWebp);
    		if ("ratio" in $$props) $$invalidate(7, ratio = $$props.ratio);
    		if ("blur" in $$props) $$invalidate(8, blur = $$props.blur);
    		if ("sizes" in $$props) $$invalidate(9, sizes = $$props.sizes);
    		if ("threshold" in $$props) $$invalidate(10, threshold = $$props.threshold);
    		if ("lazy" in $$props) $$invalidate(11, lazy = $$props.lazy);
    		if ("wrapperClass" in $$props) $$invalidate(12, wrapperClass = $$props.wrapperClass);
    		if ("placeholderClass" in $$props) $$invalidate(13, placeholderClass = $$props.placeholderClass);
    		if ("class" in $$props) $$invalidate(14, className = $$props.class);
    	};

    	$$self.$capture_state = () => ({
    		Waypoint,
    		c,
    		alt,
    		width,
    		height,
    		src,
    		srcset,
    		srcsetWebp,
    		ratio,
    		blur,
    		sizes,
    		threshold,
    		lazy,
    		wrapperClass,
    		placeholderClass,
    		className,
    		loaded,
    		load
    	});

    	$$self.$inject_state = $$props => {
    		if ("c" in $$props) $$invalidate(0, c = $$props.c);
    		if ("alt" in $$props) $$invalidate(1, alt = $$props.alt);
    		if ("width" in $$props) $$invalidate(2, width = $$props.width);
    		if ("height" in $$props) $$invalidate(3, height = $$props.height);
    		if ("src" in $$props) $$invalidate(4, src = $$props.src);
    		if ("srcset" in $$props) $$invalidate(5, srcset = $$props.srcset);
    		if ("srcsetWebp" in $$props) $$invalidate(6, srcsetWebp = $$props.srcsetWebp);
    		if ("ratio" in $$props) $$invalidate(7, ratio = $$props.ratio);
    		if ("blur" in $$props) $$invalidate(8, blur = $$props.blur);
    		if ("sizes" in $$props) $$invalidate(9, sizes = $$props.sizes);
    		if ("threshold" in $$props) $$invalidate(10, threshold = $$props.threshold);
    		if ("lazy" in $$props) $$invalidate(11, lazy = $$props.lazy);
    		if ("wrapperClass" in $$props) $$invalidate(12, wrapperClass = $$props.wrapperClass);
    		if ("placeholderClass" in $$props) $$invalidate(13, placeholderClass = $$props.placeholderClass);
    		if ("className" in $$props) $$invalidate(14, className = $$props.className);
    		if ("loaded" in $$props) $$invalidate(15, loaded = $$props.loaded);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		c,
    		alt,
    		width,
    		height,
    		src,
    		srcset,
    		srcsetWebp,
    		ratio,
    		blur,
    		sizes,
    		threshold,
    		lazy,
    		wrapperClass,
    		placeholderClass,
    		className,
    		loaded,
    		load
    	];
    }

    class Image extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
    			c: 0,
    			alt: 1,
    			width: 2,
    			height: 3,
    			src: 4,
    			srcset: 5,
    			srcsetWebp: 6,
    			ratio: 7,
    			blur: 8,
    			sizes: 9,
    			threshold: 10,
    			lazy: 11,
    			wrapperClass: 12,
    			placeholderClass: 13,
    			class: 14
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Image",
    			options,
    			id: create_fragment$1.name
    		});
    	}

    	get c() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set c(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get alt() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set alt(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get width() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set width(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get height() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set height(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get src() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set src(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get srcset() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set srcset(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get srcsetWebp() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set srcsetWebp(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get ratio() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set ratio(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get blur() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set blur(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get sizes() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set sizes(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get threshold() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set threshold(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get lazy() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set lazy(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get wrapperClass() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set wrapperClass(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get placeholderClass() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set placeholderClass(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get class() {
    		throw new Error("<Image>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set class(value) {
    		throw new Error("<Image>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\Part\Part.svelte generated by Svelte v3.29.7 */

    const file$2 = "src\\Part\\Part.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[1] = list[i];
    	return child_ctx;
    }

    // (20:0) {#each part.paragraphes as paragraph}
    function create_each_block(ctx) {
    	let p;
    	let t_value = /*paragraph*/ ctx[1] + "";
    	let t;

    	const block = {
    		c: function create() {
    			p = element("p");
    			t = text(t_value);
    			add_location(p, file$2, 20, 4, 363);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);
    			append_dev(p, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*part*/ 1 && t_value !== (t_value = /*paragraph*/ ctx[1] + "")) set_data_dev(t, t_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(20:0) {#each part.paragraphes as paragraph}",
    		ctx
    	});

    	return block;
    }

    // (23:0) {#if part.image}
    function create_if_block$1(ctx) {
    	let div;
    	let img;
    	let img_src_value;
    	let img_alt_value;
    	let t0;
    	let p;
    	let t1_value = /*part*/ ctx[0].image.annotation + "";
    	let t1;

    	const block = {
    		c: function create() {
    			div = element("div");
    			img = element("img");
    			t0 = space();
    			p = element("p");
    			t1 = text(t1_value);
    			if (img.src !== (img_src_value = /*part*/ ctx[0].image.src)) attr_dev(img, "src", img_src_value);
    			attr_dev(img, "alt", img_alt_value = /*part*/ ctx[0].image.annotation);
    			add_location(img, file$2, 24, 8, 452);
    			attr_dev(div, "class", "imageContainer svelte-16h1q7u");
    			add_location(div, file$2, 23, 4, 414);
    			attr_dev(p, "class", "annotation svelte-16h1q7u");
    			add_location(p, file$2, 27, 4, 531);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, img);
    			insert_dev(target, t0, anchor);
    			insert_dev(target, p, anchor);
    			append_dev(p, t1);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*part*/ 1 && img.src !== (img_src_value = /*part*/ ctx[0].image.src)) {
    				attr_dev(img, "src", img_src_value);
    			}

    			if (dirty & /*part*/ 1 && img_alt_value !== (img_alt_value = /*part*/ ctx[0].image.annotation)) {
    				attr_dev(img, "alt", img_alt_value);
    			}

    			if (dirty & /*part*/ 1 && t1_value !== (t1_value = /*part*/ ctx[0].image.annotation + "")) set_data_dev(t1, t1_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(p);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$1.name,
    		type: "if",
    		source: "(23:0) {#if part.image}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$2(ctx) {
    	let h5;
    	let t0_value = /*part*/ ctx[0].time + "";
    	let t0;
    	let t1;
    	let t2;
    	let if_block_anchor;
    	let each_value = /*part*/ ctx[0].paragraphes;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
    	}

    	let if_block = /*part*/ ctx[0].image && create_if_block$1(ctx);

    	const block = {
    		c: function create() {
    			h5 = element("h5");
    			t0 = text(t0_value);
    			t1 = space();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t2 = space();
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    			add_location(h5, file$2, 18, 0, 298);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, h5, anchor);
    			append_dev(h5, t0);
    			insert_dev(target, t1, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(target, anchor);
    			}

    			insert_dev(target, t2, anchor);
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*part*/ 1 && t0_value !== (t0_value = /*part*/ ctx[0].time + "")) set_data_dev(t0, t0_value);

    			if (dirty & /*part*/ 1) {
    				each_value = /*part*/ ctx[0].paragraphes;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(t2.parentNode, t2);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (/*part*/ ctx[0].image) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$1(ctx);
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(h5);
    			if (detaching) detach_dev(t1);
    			destroy_each(each_blocks, detaching);
    			if (detaching) detach_dev(t2);
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Part", slots, []);
    	let { part = "" } = $$props;
    	const writable_props = ["part"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Part> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ("part" in $$props) $$invalidate(0, part = $$props.part);
    	};

    	$$self.$capture_state = () => ({ part });

    	$$self.$inject_state = $$props => {
    		if ("part" in $$props) $$invalidate(0, part = $$props.part);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [part];
    }

    class Part extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$2, create_fragment$2, safe_not_equal, { part: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Part",
    			options,
    			id: create_fragment$2.name
    		});
    	}

    	get part() {
    		throw new Error("<Part>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set part(value) {
    		throw new Error("<Part>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\Article\Article.svelte generated by Svelte v3.29.7 */
    const file$3 = "src\\Article\\Article.svelte";

    function get_each_context$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[4] = list[i];
    	return child_ctx;
    }

    // (23:4) {#each article.parts as part}
    function create_each_block$1(ctx) {
    	let part;
    	let current;

    	part = new Part({
    			props: { part: /*part*/ ctx[4] },
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(part.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(part, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const part_changes = {};
    			if (dirty & /*article*/ 1) part_changes.part = /*part*/ ctx[4];
    			part.$set(part_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(part.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(part.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(part, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$1.name,
    		type: "each",
    		source: "(23:4) {#each article.parts as part}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$3(ctx) {
    	let div;
    	let h3;
    	let t0;
    	let t1_value = /*article*/ ctx[0].day + "";
    	let t1;
    	let t2;
    	let h4;
    	let t3_value = /*article*/ ctx[0].date + "";
    	let t3;
    	let t4;
    	let current;
    	let each_value = /*article*/ ctx[0].parts;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			div = element("div");
    			h3 = element("h3");
    			t0 = text("День ");
    			t1 = text(t1_value);
    			t2 = space();
    			h4 = element("h4");
    			t3 = text(t3_value);
    			t4 = space();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			add_location(h3, file$3, 20, 4, 345);
    			add_location(h4, file$3, 21, 4, 394);
    			attr_dev(div, "class", "article svelte-hggqsf");
    			add_location(div, file$3, 19, 0, 318);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, h3);
    			append_dev(h3, t0);
    			append_dev(h3, t1);
    			/*h3_binding*/ ctx[3](h3);
    			append_dev(div, t2);
    			append_dev(div, h4);
    			append_dev(h4, t3);
    			append_dev(div, t4);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if ((!current || dirty & /*article*/ 1) && t1_value !== (t1_value = /*article*/ ctx[0].day + "")) set_data_dev(t1, t1_value);
    			if ((!current || dirty & /*article*/ 1) && t3_value !== (t3_value = /*article*/ ctx[0].date + "")) set_data_dev(t3, t3_value);

    			if (dirty & /*article*/ 1) {
    				each_value = /*article*/ ctx[0].parts;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$1(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block$1(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(div, null);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*h3_binding*/ ctx[3](null);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("Article", slots, []);
    	let { article = {} } = $$props;

    	let { onMount = () => {
    		
    	} } = $$props;

    	let ref;
    	const writable_props = ["article", "onMount"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Article> was created with unknown prop '${key}'`);
    	});

    	function h3_binding($$value) {
    		binding_callbacks[$$value ? "unshift" : "push"](() => {
    			ref = $$value;
    			$$invalidate(1, ref);
    		});
    	}

    	$$self.$$set = $$props => {
    		if ("article" in $$props) $$invalidate(0, article = $$props.article);
    		if ("onMount" in $$props) $$invalidate(2, onMount = $$props.onMount);
    	};

    	$$self.$capture_state = () => ({ Image, Part, article, onMount, ref });

    	$$self.$inject_state = $$props => {
    		if ("article" in $$props) $$invalidate(0, article = $$props.article);
    		if ("onMount" in $$props) $$invalidate(2, onMount = $$props.onMount);
    		if ("ref" in $$props) $$invalidate(1, ref = $$props.ref);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*onMount, article, ref*/ 7) {
    			 {
    				onMount(article.day, ref);
    			}
    		}
    	};

    	return [article, ref, onMount, h3_binding];
    }

    class Article extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$3, create_fragment$3, safe_not_equal, { article: 0, onMount: 2 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Article",
    			options,
    			id: create_fragment$3.name
    		});
    	}

    	get article() {
    		throw new Error("<Article>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set article(value) {
    		throw new Error("<Article>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get onMount() {
    		throw new Error("<Article>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set onMount(value) {
    		throw new Error("<Article>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\NavigationItem\NaviagtionItem.svelte generated by Svelte v3.29.7 */

    const file$4 = "src\\NavigationItem\\NaviagtionItem.svelte";

    function create_fragment$4(ctx) {
    	let h6;
    	let t;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			h6 = element("h6");
    			t = text(/*label*/ ctx[0]);
    			attr_dev(h6, "class", "svelte-nulvgz");
    			add_location(h6, file$4, 16, 0, 247);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, h6, anchor);
    			append_dev(h6, t);

    			if (!mounted) {
    				dispose = listen_dev(h6, "click", /*selectItem*/ ctx[1], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*label*/ 1) set_data_dev(t, /*label*/ ctx[0]);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(h6);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("NaviagtionItem", slots, []);
    	let { label = "" } = $$props;
    	let { value = "" } = $$props;

    	let { onSelect = () => {
    		
    	} } = $$props;

    	const selectItem = () => {
    		onSelect(value);
    	};

    	const writable_props = ["label", "value", "onSelect"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<NaviagtionItem> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ("label" in $$props) $$invalidate(0, label = $$props.label);
    		if ("value" in $$props) $$invalidate(2, value = $$props.value);
    		if ("onSelect" in $$props) $$invalidate(3, onSelect = $$props.onSelect);
    	};

    	$$self.$capture_state = () => ({ label, value, onSelect, selectItem });

    	$$self.$inject_state = $$props => {
    		if ("label" in $$props) $$invalidate(0, label = $$props.label);
    		if ("value" in $$props) $$invalidate(2, value = $$props.value);
    		if ("onSelect" in $$props) $$invalidate(3, onSelect = $$props.onSelect);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [label, selectItem, value, onSelect];
    }

    class NaviagtionItem extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$4, create_fragment$4, safe_not_equal, { label: 0, value: 2, onSelect: 3 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "NaviagtionItem",
    			options,
    			id: create_fragment$4.name
    		});
    	}

    	get label() {
    		throw new Error("<NaviagtionItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set label(value) {
    		throw new Error("<NaviagtionItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get value() {
    		throw new Error("<NaviagtionItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set value(value) {
    		throw new Error("<NaviagtionItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get onSelect() {
    		throw new Error("<NaviagtionItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set onSelect(value) {
    		throw new Error("<NaviagtionItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\JournalNavigation\JournalNavigation.svelte generated by Svelte v3.29.7 */
    const file$5 = "src\\JournalNavigation\\JournalNavigation.svelte";

    function get_each_context$2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[2] = list[i];
    	return child_ctx;
    }

    // (22:4) {#each articles as article }
    function create_each_block$2(ctx) {
    	let navigationitem;
    	let current;

    	navigationitem = new NaviagtionItem({
    			props: {
    				onSelect: /*onSelect*/ ctx[1],
    				label: `День ${/*article*/ ctx[2].day} - ${/*article*/ ctx[2].date}`,
    				value: /*article*/ ctx[2].day
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(navigationitem.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(navigationitem, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const navigationitem_changes = {};
    			if (dirty & /*onSelect*/ 2) navigationitem_changes.onSelect = /*onSelect*/ ctx[1];
    			if (dirty & /*articles*/ 1) navigationitem_changes.label = `День ${/*article*/ ctx[2].day} - ${/*article*/ ctx[2].date}`;
    			if (dirty & /*articles*/ 1) navigationitem_changes.value = /*article*/ ctx[2].day;
    			navigationitem.$set(navigationitem_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(navigationitem.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(navigationitem.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(navigationitem, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$2.name,
    		type: "each",
    		source: "(22:4) {#each articles as article }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$5(ctx) {
    	let div;
    	let h4;
    	let t1;
    	let current;
    	let each_value = /*articles*/ ctx[0];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			div = element("div");
    			h4 = element("h4");
    			h4.textContent = "Содержание";
    			t1 = space();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(h4, "class", "svelte-wo5skg");
    			add_location(h4, file$5, 20, 4, 357);
    			attr_dev(div, "class", "container svelte-wo5skg");
    			add_location(div, file$5, 19, 0, 328);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, h4);
    			append_dev(div, t1);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*onSelect, articles*/ 3) {
    				each_value = /*articles*/ ctx[0];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$2(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block$2(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(div, null);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("JournalNavigation", slots, []);
    	let { articles = {} } = $$props;

    	let { onSelect = () => {
    		
    	} } = $$props;

    	const writable_props = ["articles", "onSelect"];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<JournalNavigation> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ("articles" in $$props) $$invalidate(0, articles = $$props.articles);
    		if ("onSelect" in $$props) $$invalidate(1, onSelect = $$props.onSelect);
    	};

    	$$self.$capture_state = () => ({ NavigationItem: NaviagtionItem, articles, onSelect });

    	$$self.$inject_state = $$props => {
    		if ("articles" in $$props) $$invalidate(0, articles = $$props.articles);
    		if ("onSelect" in $$props) $$invalidate(1, onSelect = $$props.onSelect);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [articles, onSelect];
    }

    class JournalNavigation extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$5, create_fragment$5, safe_not_equal, { articles: 0, onSelect: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "JournalNavigation",
    			options,
    			id: create_fragment$5.name
    		});
    	}

    	get articles() {
    		throw new Error("<JournalNavigation>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set articles(value) {
    		throw new Error("<JournalNavigation>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get onSelect() {
    		throw new Error("<JournalNavigation>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set onSelect(value) {
    		throw new Error("<JournalNavigation>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\App.svelte generated by Svelte v3.29.7 */

    const { console: console_1 } = globals;
    const file$6 = "src\\App.svelte";

    function get_each_context$3(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[5] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[8] = list[i];
    	return child_ctx;
    }

    function get_each_context_2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[11] = list[i];
    	return child_ctx;
    }

    // (152:4) {#each epigraph.paragraphes as paragraph}
    function create_each_block_2(ctx) {
    	let p;
    	let t_value = /*paragraph*/ ctx[11] + "";
    	let t;

    	const block = {
    		c: function create() {
    			p = element("p");
    			t = text(t_value);
    			add_location(p, file$6, 152, 5, 2924);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);
    			append_dev(p, t);
    		},
    		p: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_2.name,
    		type: "each",
    		source: "(152:4) {#each epigraph.paragraphes as paragraph}",
    		ctx
    	});

    	return block;
    }

    // (150:2) {#each data.epigraphes as epigraph}
    function create_each_block_1(ctx) {
    	let div;
    	let t0;
    	let p;
    	let t1_value = /*epigraph*/ ctx[8].annotation + "";
    	let t1;
    	let each_value_2 = /*epigraph*/ ctx[8].paragraphes;
    	validate_each_argument(each_value_2);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_2.length; i += 1) {
    		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
    	}

    	const block = {
    		c: function create() {
    			div = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t0 = space();
    			p = element("p");
    			t1 = text(t1_value);
    			attr_dev(p, "class", "epigraph__annotation svelte-1d1k5vx");
    			add_location(p, file$6, 154, 4, 2963);
    			attr_dev(div, "class", "epigraph svelte-1d1k5vx");
    			add_location(div, file$6, 150, 3, 2848);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div, null);
    			}

    			append_dev(div, t0);
    			append_dev(div, p);
    			append_dev(p, t1);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*data*/ 0) {
    				each_value_2 = /*epigraph*/ ctx[8].paragraphes;
    				validate_each_argument(each_value_2);
    				let i;

    				for (i = 0; i < each_value_2.length; i += 1) {
    					const child_ctx = get_each_context_2(ctx, each_value_2, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block_2(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(div, t0);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value_2.length;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(150:2) {#each data.epigraphes as epigraph}",
    		ctx
    	});

    	return block;
    }

    // (159:2) {#each data.articles as article}
    function create_each_block$3(ctx) {
    	let article;
    	let current;

    	article = new Article({
    			props: {
    				article: /*article*/ ctx[5],
    				onMount: /*setArticleRef*/ ctx[2]
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(article.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(article, target, anchor);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(article.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(article.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(article, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$3.name,
    		type: "each",
    		source: "(159:2) {#each data.articles as article}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$6(ctx) {
    	let body;
    	let article;
    	let div0;
    	let h2;
    	let t1;
    	let t2;
    	let t3;
    	let nav;
    	let t4;
    	let div2;
    	let button;
    	let button_class_value;
    	let t5;
    	let div1;
    	let journalnavigation;
    	let div2_class_value;
    	let t6;
    	let footer;
    	let current;
    	let mounted;
    	let dispose;
    	let each_value_1 = epigraphes;
    	validate_each_argument(each_value_1);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	let each_value = articles;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	journalnavigation = new JournalNavigation({
    			props: {
    				articles: articles,
    				onSelect: /*focusArticle*/ ctx[1]
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			body = element("body");
    			article = element("article");
    			div0 = element("div");
    			h2 = element("h2");
    			h2.textContent = `${title}`;
    			t1 = space();

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			t2 = space();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t3 = space();
    			nav = element("nav");
    			t4 = space();
    			div2 = element("div");
    			button = element("button");
    			t5 = space();
    			div1 = element("div");
    			create_component(journalnavigation.$$.fragment);
    			t6 = space();
    			footer = element("footer");
    			add_location(h2, file$6, 145, 3, 2765);
    			attr_dev(div0, "class", "journalTitle svelte-1d1k5vx");
    			add_location(div0, file$6, 144, 2, 2734);
    			attr_dev(article, "class", "mainArticle svelte-1d1k5vx");
    			add_location(article, file$6, 143, 1, 2701);
    			attr_dev(nav, "class", "mainNav svelte-1d1k5vx");
    			add_location(nav, file$6, 165, 1, 3175);

    			attr_dev(button, "class", button_class_value = "" + (null_to_empty(/*isJournalNavPanelHidden*/ ctx[0]
    			? "siteAds__button-hidden"
    			: "siteAds__button-shown") + " svelte-1d1k5vx"));

    			add_location(button, file$6, 167, 2, 3301);
    			attr_dev(div1, "class", "siteAds__content svelte-1d1k5vx");
    			add_location(div1, file$6, 168, 2, 3440);

    			attr_dev(div2, "class", div2_class_value = "" + (null_to_empty(/*isJournalNavPanelHidden*/ ctx[0]
    			? "siteAds siteAds__hidden"
    			: "siteAds siteAds__shown") + " svelte-1d1k5vx"));

    			add_location(div2, file$6, 166, 1, 3205);
    			attr_dev(footer, "class", "footer svelte-1d1k5vx");
    			add_location(footer, file$6, 172, 1, 3568);
    			attr_dev(body, "class", "main svelte-1d1k5vx");
    			add_location(body, file$6, 142, 0, 2679);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, body, anchor);
    			append_dev(body, article);
    			append_dev(article, div0);
    			append_dev(div0, h2);
    			append_dev(article, t1);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(article, null);
    			}

    			append_dev(article, t2);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(article, null);
    			}

    			append_dev(body, t3);
    			append_dev(body, nav);
    			append_dev(body, t4);
    			append_dev(body, div2);
    			append_dev(div2, button);
    			append_dev(div2, t5);
    			append_dev(div2, div1);
    			mount_component(journalnavigation, div1, null);
    			append_dev(body, t6);
    			append_dev(body, footer);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*toggleJournalNavPanel*/ ctx[3], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*data*/ 0) {
    				each_value_1 = epigraphes;
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_1[i] = create_each_block_1(child_ctx);
    						each_blocks_1[i].c();
    						each_blocks_1[i].m(article, t2);
    					}
    				}

    				for (; i < each_blocks_1.length; i += 1) {
    					each_blocks_1[i].d(1);
    				}

    				each_blocks_1.length = each_value_1.length;
    			}

    			if (dirty & /*data, setArticleRef*/ 4) {
    				each_value = articles;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$3(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block$3(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(article, null);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}

    			if (!current || dirty & /*isJournalNavPanelHidden*/ 1 && button_class_value !== (button_class_value = "" + (null_to_empty(/*isJournalNavPanelHidden*/ ctx[0]
    			? "siteAds__button-hidden"
    			: "siteAds__button-shown") + " svelte-1d1k5vx"))) {
    				attr_dev(button, "class", button_class_value);
    			}

    			if (!current || dirty & /*isJournalNavPanelHidden*/ 1 && div2_class_value !== (div2_class_value = "" + (null_to_empty(/*isJournalNavPanelHidden*/ ctx[0]
    			? "siteAds siteAds__hidden"
    			: "siteAds siteAds__shown") + " svelte-1d1k5vx"))) {
    				attr_dev(div2, "class", div2_class_value);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			transition_in(journalnavigation.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			transition_out(journalnavigation.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(body);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    			destroy_component(journalnavigation);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots("App", slots, []);
    	let elements = {};
    	let isJournalNavPanelHidden = true;

    	const focusArticle = id => {
    		console.log("focusArticle " + id + " " + elements[id]);
    		elements[id].scrollIntoView();
    	};

    	const setArticleRef = (id, ref) => elements[id] = ref;

    	const toggleJournalNavPanel = () => {
    		console.log("toggleJournalNavPanel");
    		$$invalidate(0, isJournalNavPanelHidden = !isJournalNavPanelHidden);
    	};

    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<App> was created with unknown prop '${key}'`);
    	});

    	$$self.$capture_state = () => ({
    		data,
    		Article,
    		JournalNavigation,
    		elements,
    		isJournalNavPanelHidden,
    		focusArticle,
    		setArticleRef,
    		toggleJournalNavPanel
    	});

    	$$self.$inject_state = $$props => {
    		if ("elements" in $$props) elements = $$props.elements;
    		if ("isJournalNavPanelHidden" in $$props) $$invalidate(0, isJournalNavPanelHidden = $$props.isJournalNavPanelHidden);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [isJournalNavPanelHidden, focusArticle, setArticleRef, toggleJournalNavPanel];
    }

    class App extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "App",
    			options,
    			id: create_fragment$6.name
    		});
    	}
    }

    var app = new App({
    	target: document.body
    });

    return app;

}());
//# sourceMappingURL=bundle.js.map
